/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst lcg_1 = __webpack_require__(/*! ./lcg */ \"./src/lcg.ts\");\nconst island_definition_1 = __webpack_require__(/*! ./island.definition */ \"./src/island.definition.ts\");\nvar c;\nvar wfc = __webpack_require__(/*! wavefunctioncollapse */ \"./node_modules/wavefunctioncollapse/index.js\");\nfunction toImageData(path) {\n    if (!c) {\n        c = document.createElement('canvas');\n    }\n    const promise = new Promise((resolve, reject) => {\n        var img = new Image();\n        img.src = path;\n        img.onload = function (e) {\n            const height = img.width;\n            const width = img.height;\n            c.width = width;\n            c.height = height;\n            var ctx = c.getContext('2d');\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0);\n            const data = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, width, height);\n            resolve(data);\n        };\n    });\n    return promise;\n}\nfunction loadTileBitmapData(basePath, tile, number) {\n    const unique = number !== undefined;\n    const tilePath = basePath + tile.name + (unique ? ' ' + number : '') + '.png';\n    return toImageData(tilePath).then(function (result) {\n        if (unique) {\n            tile.bitmap[number] = new Uint8Array(result.data);\n        }\n        else {\n            tile.bitmap = new Uint8Array(result.data);\n        }\n        return true;\n    });\n}\nfunction loadDefinition(definition, callback) {\n    const tiles = definition.tiles.map((t) => (Object.assign({}, t)));\n    const promises = [];\n    const path = definition.path;\n    tiles.map(function (tile) {\n        const loadedTile = tile;\n        if (definition.unique) {\n            if (loadedTile.symmetry === 'X') {\n                loadedTile.bitmap = new Array(1);\n                promises.push(loadTileBitmapData(path, loadedTile, 0));\n            }\n            else {\n                loadedTile.bitmap = new Array(4);\n                promises.push(loadTileBitmapData(path, loadedTile, 0));\n                promises.push(loadTileBitmapData(path, loadedTile, 1));\n                promises.push(loadTileBitmapData(path, loadedTile, 2));\n                promises.push(loadTileBitmapData(path, loadedTile, 3));\n            }\n        }\n        else {\n            promises.push(loadTileBitmapData(path, loadedTile));\n        }\n    });\n    Promise.all(promises).then(function () {\n        const loadedDefinition = Object.assign(Object.assign({}, definition), { tiles });\n        callback(undefined, loadedDefinition);\n    }, function (error) {\n        callback(error);\n    });\n}\nfunction generateMap(seed) {\n    loadDefinition(island_definition_1.islandDefinition, (err, definition) => {\n        if (err) {\n            throw err;\n        }\n        const destWidth = 46;\n        const destHeight = 30;\n        const canvasWidth = destWidth * definition.tilesize;\n        const canvasHeight = destHeight * definition.tilesize;\n        //try catch to prevent the eventual errors from being silenced by the promise...\n        let output = document.getElementById('wfc_output');\n        let ctx = output.getContext('2d');\n        ctx.canvas.width = canvasWidth;\n        ctx.canvas.height = canvasHeight;\n        let imgData = ctx.createImageData(canvasWidth, canvasHeight);\n        try {\n            const model = new wfc.SimpleTiledModel(definition, null, destWidth, destHeight, false);\n            const finished = model.generate((0, lcg_1.lcgRandom)(seed));\n            if (finished) {\n                const result = model.graphics(imgData.data);\n                ctx.putImageData(imgData, 0, 0);\n            }\n            else {\n                failed();\n            }\n        }\n        catch (e) {\n            failed();\n        }\n    });\n}\nconst button = document.getElementById('wfc_generate');\nconst output = document.getElementById('wfc_seed');\nfunction generate() {\n    const seed = Math.round(Math.random() * 10000 + 1);\n    generateMap(seed);\n    output.innerText = `seed: ${seed}`;\n}\nbutton === null || button === void 0 ? void 0 : button.addEventListener('click', generate);\ngenerate();\nfunction failed() {\n    output.innerText = 'generation failed';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxtQkFBTyxDQUFDLDJCQUFPO0FBQzdCLDRCQUE0QixtQkFBTyxDQUFDLHVEQUFxQjtBQUN6RDtBQUNBLFVBQVUsbUJBQU8sQ0FBQywwRUFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwrREFBK0QsaUJBQWlCLE9BQU87QUFDdkY7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxLQUFLO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dmYy1hcmNoaXBlbGFnby0yZC8uL3NyYy9pbmRleC50cz9lOTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbGNnXzEgPSByZXF1aXJlKFwiLi9sY2dcIik7XG5jb25zdCBpc2xhbmRfZGVmaW5pdGlvbl8xID0gcmVxdWlyZShcIi4vaXNsYW5kLmRlZmluaXRpb25cIik7XG52YXIgYztcbnZhciB3ZmMgPSByZXF1aXJlKCd3YXZlZnVuY3Rpb25jb2xsYXBzZScpO1xuZnVuY3Rpb24gdG9JbWFnZURhdGEocGF0aCkge1xuICAgIGlmICghYykge1xuICAgICAgICBjID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgfVxuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaW1nLnNyYyA9IHBhdGg7XG4gICAgICAgIGltZy5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gaW1nLndpZHRoO1xuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSBpbWcuaGVpZ2h0O1xuICAgICAgICAgICAgYy53aWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgYy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgICAgICB2YXIgY3R4ID0gYy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAgICAgY3R4ID09PSBudWxsIHx8IGN0eCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3R4LmRyYXdJbWFnZShpbWcsIDAsIDApO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGN0eCA9PT0gbnVsbCB8fCBjdHggPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN0eC5nZXRJbWFnZURhdGEoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHJldHVybiBwcm9taXNlO1xufVxuZnVuY3Rpb24gbG9hZFRpbGVCaXRtYXBEYXRhKGJhc2VQYXRoLCB0aWxlLCBudW1iZXIpIHtcbiAgICBjb25zdCB1bmlxdWUgPSBudW1iZXIgIT09IHVuZGVmaW5lZDtcbiAgICBjb25zdCB0aWxlUGF0aCA9IGJhc2VQYXRoICsgdGlsZS5uYW1lICsgKHVuaXF1ZSA/ICcgJyArIG51bWJlciA6ICcnKSArICcucG5nJztcbiAgICByZXR1cm4gdG9JbWFnZURhdGEodGlsZVBhdGgpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAodW5pcXVlKSB7XG4gICAgICAgICAgICB0aWxlLmJpdG1hcFtudW1iZXJdID0gbmV3IFVpbnQ4QXJyYXkocmVzdWx0LmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGlsZS5iaXRtYXAgPSBuZXcgVWludDhBcnJheShyZXN1bHQuZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBsb2FkRGVmaW5pdGlvbihkZWZpbml0aW9uLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IHRpbGVzID0gZGVmaW5pdGlvbi50aWxlcy5tYXAoKHQpID0+IChPYmplY3QuYXNzaWduKHt9LCB0KSkpO1xuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgY29uc3QgcGF0aCA9IGRlZmluaXRpb24ucGF0aDtcbiAgICB0aWxlcy5tYXAoZnVuY3Rpb24gKHRpbGUpIHtcbiAgICAgICAgY29uc3QgbG9hZGVkVGlsZSA9IHRpbGU7XG4gICAgICAgIGlmIChkZWZpbml0aW9uLnVuaXF1ZSkge1xuICAgICAgICAgICAgaWYgKGxvYWRlZFRpbGUuc3ltbWV0cnkgPT09ICdYJykge1xuICAgICAgICAgICAgICAgIGxvYWRlZFRpbGUuYml0bWFwID0gbmV3IEFycmF5KDEpO1xuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2gobG9hZFRpbGVCaXRtYXBEYXRhKHBhdGgsIGxvYWRlZFRpbGUsIDApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvYWRlZFRpbGUuYml0bWFwID0gbmV3IEFycmF5KDQpO1xuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2gobG9hZFRpbGVCaXRtYXBEYXRhKHBhdGgsIGxvYWRlZFRpbGUsIDApKTtcbiAgICAgICAgICAgICAgICBwcm9taXNlcy5wdXNoKGxvYWRUaWxlQml0bWFwRGF0YShwYXRoLCBsb2FkZWRUaWxlLCAxKSk7XG4gICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChsb2FkVGlsZUJpdG1hcERhdGEocGF0aCwgbG9hZGVkVGlsZSwgMikpO1xuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2gobG9hZFRpbGVCaXRtYXBEYXRhKHBhdGgsIGxvYWRlZFRpbGUsIDMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2gobG9hZFRpbGVCaXRtYXBEYXRhKHBhdGgsIGxvYWRlZFRpbGUpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3QgbG9hZGVkRGVmaW5pdGlvbiA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmaW5pdGlvbiksIHsgdGlsZXMgfSk7XG4gICAgICAgIGNhbGxiYWNrKHVuZGVmaW5lZCwgbG9hZGVkRGVmaW5pdGlvbik7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGNhbGxiYWNrKGVycm9yKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlTWFwKHNlZWQpIHtcbiAgICBsb2FkRGVmaW5pdGlvbihpc2xhbmRfZGVmaW5pdGlvbl8xLmlzbGFuZERlZmluaXRpb24sIChlcnIsIGRlZmluaXRpb24pID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlc3RXaWR0aCA9IDI0O1xuICAgICAgICBjb25zdCBkZXN0SGVpZ2h0ID0gMjQ7XG4gICAgICAgIGNvbnN0IGNhbnZhc1dpZHRoID0gZGVzdFdpZHRoICogZGVmaW5pdGlvbi50aWxlc2l6ZTtcbiAgICAgICAgY29uc3QgY2FudmFzSGVpZ2h0ID0gZGVzdEhlaWdodCAqIGRlZmluaXRpb24udGlsZXNpemU7XG4gICAgICAgIC8vdHJ5IGNhdGNoIHRvIHByZXZlbnQgdGhlIGV2ZW50dWFsIGVycm9ycyBmcm9tIGJlaW5nIHNpbGVuY2VkIGJ5IHRoZSBwcm9taXNlLi4uXG4gICAgICAgIGxldCBvdXRwdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2ZjX291dHB1dCcpO1xuICAgICAgICBsZXQgY3R4ID0gb3V0cHV0LmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIGN0eC5jYW52YXMud2lkdGggPSBjYW52YXNXaWR0aDtcbiAgICAgICAgY3R4LmNhbnZhcy5oZWlnaHQgPSBjYW52YXNIZWlnaHQ7XG4gICAgICAgIGxldCBpbWdEYXRhID0gY3R4LmNyZWF0ZUltYWdlRGF0YShjYW52YXNXaWR0aCwgY2FudmFzSGVpZ2h0KTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG1vZGVsID0gbmV3IHdmYy5TaW1wbGVUaWxlZE1vZGVsKGRlZmluaXRpb24sIG51bGwsIGRlc3RXaWR0aCwgZGVzdEhlaWdodCwgZmFsc2UpO1xuICAgICAgICAgICAgY29uc3QgZmluaXNoZWQgPSBtb2RlbC5nZW5lcmF0ZSgoMCwgbGNnXzEubGNnUmFuZG9tKShzZWVkKSk7XG4gICAgICAgICAgICBpZiAoZmluaXNoZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBtb2RlbC5ncmFwaGljcyhpbWdEYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgIGN0eC5wdXRJbWFnZURhdGEoaW1nRGF0YSwgMCwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmYWlsZWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZmFpbGVkKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZmNfZ2VuZXJhdGUnKTtcbmNvbnN0IG91dHB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZmNfc2VlZCcpO1xuZnVuY3Rpb24gZ2VuZXJhdGUoKSB7XG4gICAgY29uc3Qgc2VlZCA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMDAwICsgMSk7XG4gICAgZ2VuZXJhdGVNYXAoc2VlZCk7XG4gICAgb3V0cHV0LmlubmVyVGV4dCA9IGBzZWVkOiAke3NlZWR9YDtcbn1cbmJ1dHRvbiA9PT0gbnVsbCB8fCBidXR0b24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdlbmVyYXRlKTtcbmdlbmVyYXRlKCk7XG5mdW5jdGlvbiBmYWlsZWQoKSB7XG4gICAgb3V0cHV0LmlubmVyVGV4dCA9ICdnZW5lcmF0aW9uIGZhaWxlZCc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/island.definition.ts":
/*!**********************************!*\
  !*** ./src/island.definition.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.islandDefinition = void 0;\nconst cornerWeight = 0.05;\nconst innerCornerWeight = 0.03;\nconst edgeWeight = 0.08;\nconst landWeight = 0.3;\nexports.islandDefinition = {\n    path: '/assets/2022-05-20/assets/island/',\n    tilesize: 16,\n    unique: true,\n    tiles: [\n        { name: 'corner_grass_rock', symmetry: 'L', weight: cornerWeight },\n        { name: 'corner_grass_water', symmetry: 'L', weight: cornerWeight },\n        { name: 'corner_rock_water', symmetry: 'L', weight: cornerWeight },\n        { name: 'inner_corner_grass_rock', symmetry: 'L', weight: innerCornerWeight },\n        { name: 'inner_corner_grass_water', symmetry: 'L', weight: innerCornerWeight },\n        { name: 'inner_corner_rock_water', symmetry: 'L', weight: innerCornerWeight },\n        { name: 'edge_grass_rock', symmetry: 'T', weight: edgeWeight },\n        { name: 'edge_grass_water', symmetry: 'T', weight: edgeWeight },\n        { name: 'edge_rock_water', symmetry: 'T', weight: edgeWeight },\n        { name: 'water', symmetry: 'X', weight: 0.7 },\n        { name: 'rock', symmetry: 'X', weight: landWeight },\n        { name: 'grass', symmetry: 'X', weight: landWeight },\n    ],\n    neighbors: [\n        { left: 'corner_grass_rock 0', right: 'rock 0' },\n        { left: 'corner_grass_rock 0', right: 'edge_grass_rock 1' },\n        { left: 'corner_grass_rock 0', right: 'edge_rock_water 1' },\n        { left: 'corner_grass_rock 0', right: 'inner_corner_rock_water 0' },\n        { left: 'corner_grass_rock 0', right: 'inner_corner_rock_water 3' },\n        { left: 'corner_grass_rock 0', right: 'corner_grass_rock 1' },\n        { left: 'corner_grass_rock 0', right: 'corner_grass_rock 2' },\n        { left: 'corner_grass_rock 1', right: 'edge_grass_rock 0' },\n        { left: 'corner_grass_rock 2', right: 'edge_grass_rock 2' },\n        { left: 'corner_grass_rock 3', right: 'rock 0' },\n        { left: 'corner_grass_rock 3', right: 'edge_grass_rock 1' },\n        { left: 'corner_grass_rock 3', right: 'edge_rock_water 1' },\n        { left: 'corner_grass_rock 3', right: 'inner_corner_rock_water 0' },\n        { left: 'corner_grass_rock 3', right: 'inner_corner_rock_water 3' },\n        { left: 'corner_grass_rock 3', right: 'corner_grass_rock 1' },\n        { left: 'corner_grass_rock 3', right: 'corner_grass_rock 2' },\n        { left: 'corner_grass_water 0', right: 'edge_grass_water 0' },\n        { left: 'corner_grass_water 1', right: 'corner_grass_water 0' },\n        { left: 'corner_grass_water 1', right: 'corner_grass_water 3' },\n        { left: 'corner_grass_water 1', right: 'corner_rock_water 0' },\n        { left: 'corner_grass_water 1', right: 'corner_rock_water 3' },\n        { left: 'corner_grass_water 1', right: 'edge_grass_water 3' },\n        { left: 'corner_grass_water 1', right: 'edge_rock_water 3' },\n        { left: 'corner_grass_water 1', right: 'water 0' },\n        { left: 'corner_grass_water 2', right: 'corner_grass_water 0' },\n        { left: 'corner_grass_water 2', right: 'corner_grass_water 3' },\n        { left: 'corner_grass_water 2', right: 'corner_rock_water 0' },\n        { left: 'corner_grass_water 2', right: 'corner_rock_water 3' },\n        { left: 'corner_grass_water 2', right: 'edge_grass_water 3' },\n        { left: 'corner_grass_water 2', right: 'edge_rock_water 3' },\n        { left: 'corner_grass_water 2', right: 'water 0' },\n        { left: 'corner_grass_water 3', right: 'edge_grass_water 2' },\n        { left: 'corner_rock_water 0', right: 'edge_rock_water 0' },\n        { left: 'corner_rock_water 1', right: 'corner_grass_water 0' },\n        { left: 'corner_rock_water 1', right: 'corner_grass_water 3' },\n        { left: 'corner_rock_water 1', right: 'corner_rock_water 0' },\n        { left: 'corner_rock_water 1', right: 'corner_rock_water 3' },\n        { left: 'corner_rock_water 1', right: 'edge_grass_water 3' },\n        { left: 'corner_rock_water 1', right: 'edge_rock_water 3' },\n        { left: 'corner_rock_water 1', right: 'water 0' },\n        { left: 'corner_rock_water 2', right: 'corner_grass_water 0' },\n        { left: 'corner_rock_water 2', right: 'corner_grass_water 3' },\n        { left: 'corner_rock_water 2', right: 'corner_rock_water 0' },\n        { left: 'corner_rock_water 2', right: 'corner_rock_water 3' },\n        { left: 'corner_rock_water 2', right: 'edge_grass_water 3' },\n        { left: 'corner_rock_water 2', right: 'edge_rock_water 3' },\n        { left: 'corner_rock_water 2', right: 'water 0' },\n        { left: 'corner_rock_water 3', right: 'edge_rock_water 2' },\n        { left: 'inner_corner_grass_rock 0', right: 'edge_grass_rock 0' },\n        { left: 'inner_corner_grass_rock 0', right: 'inner_corner_grass_rock 1' },\n        { left: 'inner_corner_grass_rock 0', right: 'corner_grass_rock 0' },\n        { left: 'inner_corner_grass_rock 1', right: 'grass 0' },\n        { left: 'inner_corner_grass_rock 1', right: 'edge_grass_water 1' },\n        { left: 'inner_corner_grass_rock 1', right: 'edge_grass_rock 3' },\n        { left: 'inner_corner_grass_rock 1', right: 'inner_corner_grass_rock 0' },\n        { left: 'inner_corner_grass_rock 2', right: 'inner_corner_grass_rock 3' },\n        { left: 'inner_corner_grass_rock 2', right: 'grass 0' },\n        { left: 'inner_corner_grass_rock 2', right: 'edge_grass_water 1' },\n        { left: 'inner_corner_grass_rock 2', right: 'edge_grass_rock 3' },\n        { left: 'inner_corner_grass_rock 2', right: 'inner_corner_grass_rock 0' },\n        { left: 'inner_corner_grass_rock 2', right: 'inner_corner_grass_rock 3' },\n        { left: 'inner_corner_grass_rock 3', right: 'edge_grass_rock 2' },\n        { left: 'inner_corner_grass_rock 3', right: 'corner_grass_rock 3' },\n        { left: 'inner_corner_grass_rock 3', right: 'inner_corner_grass_rock 2' },\n        { left: 'inner_corner_grass_water 0', right: 'inner_corner_grass_water 1' },\n        { left: 'inner_corner_grass_water 0', right: 'corner_grass_water 2' },\n        { left: 'inner_corner_grass_water 0', right: 'edge_grass_water 2' },\n        { left: 'inner_corner_grass_water 1', right: 'grass 0' },\n        { left: 'inner_corner_grass_water 1', right: 'edge_grass_water 1' },\n        { left: 'inner_corner_grass_water 1', right: 'inner_corner_grass_water 3' },\n        { left: 'inner_corner_grass_water 2', right: 'inner_corner_grass_water 3' },\n        { left: 'inner_corner_grass_water 2', right: 'grass 0' },\n        { left: 'inner_corner_grass_water 2', right: 'edge_grass_water 1' },\n        { left: 'inner_corner_grass_water 3', right: 'corner_grass_water 1' },\n        { left: 'inner_corner_grass_water 3', right: 'edge_grass_water 0' },\n        { left: 'inner_corner_grass_water 3', right: 'inner_corner_grass_water 2' },\n        { left: 'inner_corner_rock_water 0', right: 'inner_corner_rock_water 1' },\n        { left: 'inner_corner_rock_water 0', right: 'edge_rock_water 2' },\n        { left: 'inner_corner_rock_water 0', right: 'corner_rock_water 2' },\n        { left: 'inner_corner_rock_water 1', right: 'rock 0' },\n        { left: 'inner_corner_rock_water 1', right: 'inner_corner_rock_water 3' },\n        { left: 'inner_corner_rock_water 1', right: 'edge_rock_water 1' },\n        { left: 'inner_corner_rock_water 1', right: 'corner_grass_rock 1' },\n        { left: 'inner_corner_rock_water 1', right: 'corner_grass_rock 2' },\n        { left: 'inner_corner_rock_water 1', right: 'edge_grass_rock 1' },\n        { left: 'inner_corner_rock_water 1', right: 'inner_corner_rock_water 0' },\n        { left: 'inner_corner_rock_water 2', right: 'inner_corner_rock_water 0' },\n        { left: 'inner_corner_rock_water 2', right: 'inner_corner_rock_water 3' },\n        { left: 'inner_corner_rock_water 2', right: 'rock 0' },\n        { left: 'inner_corner_rock_water 2', right: 'edge_rock_water 1' },\n        { left: 'inner_corner_rock_water 2', right: 'edge_grass_rock 1' },\n        { left: 'inner_corner_rock_water 2', right: 'corner_grass_rock 2' },\n        { left: 'inner_corner_rock_water 2', right: 'corner_grass_rock 1' },\n        { left: 'inner_corner_rock_water 3', right: 'corner_rock_water 1' },\n        { left: 'inner_corner_rock_water 3', right: 'edge_rock_water 0' },\n        { left: 'inner_corner_rock_water 3', right: 'inner_corner_rock_water 2' },\n        { left: 'edge_grass_rock 0', right: 'edge_grass_rock 0' },\n        { left: 'edge_grass_rock 0', right: 'corner_grass_rock 0' },\n        { left: 'edge_grass_rock 0', right: 'inner_corner_grass_rock 1' },\n        { left: 'edge_grass_rock 1', right: 'grass 0' },\n        { left: 'edge_grass_rock 1', right: 'inner_corner_grass_rock 0' },\n        { left: 'edge_grass_rock 1', right: 'inner_corner_grass_rock 3' },\n        { left: 'edge_grass_rock 1', right: 'edge_grass_rock 3' },\n        { left: 'edge_grass_rock 2', right: 'edge_grass_rock 2' },\n        { left: 'edge_grass_rock 2', right: 'corner_grass_rock 3' },\n        { left: 'edge_grass_rock 2', right: 'inner_corner_grass_rock 2' },\n        { left: 'edge_grass_rock 3', right: 'corner_grass_rock 1' },\n        { left: 'edge_grass_rock 3', right: 'corner_grass_rock 2' },\n        { left: 'edge_grass_rock 3', right: 'inner_corner_rock_water 0' },\n        { left: 'edge_grass_rock 3', right: 'inner_corner_rock_water 3' },\n        { left: 'edge_grass_rock 3', right: 'edge_rock_water 1' },\n        { left: 'edge_grass_rock 3', right: 'edge_grass_rock 1' },\n        { left: 'edge_grass_water 0', right: 'edge_grass_water 0' },\n        { left: 'edge_grass_water 0', right: 'corner_grass_water 1' },\n        { left: 'edge_grass_water 0', right: 'inner_corner_grass_water 2' },\n        { left: 'edge_grass_water 1', right: 'corner_grass_water 0' },\n        { left: 'edge_grass_water 1', right: 'corner_grass_water 3' },\n        { left: 'edge_grass_water 1', right: 'edge_grass_water 3' },\n        { left: 'edge_grass_water 1', right: 'water 0' },\n        { left: 'edge_grass_water 1', right: 'edge_rock_water 3' },\n        { left: 'edge_grass_water 1', right: 'corner_rock_water 0' },\n        { left: 'edge_grass_water 1', right: 'corner_rock_water 3' },\n        { left: 'edge_grass_water 2', right: 'edge_grass_water 2' },\n        { left: 'edge_grass_water 2', right: 'corner_grass_water 2' },\n        { left: 'edge_grass_water 2', right: 'inner_corner_grass_water 1' },\n        { left: 'edge_grass_water 3', right: 'edge_grass_water 1' },\n        { left: 'edge_grass_water 3', right: 'grass 0' },\n        { left: 'edge_grass_water 3', right: 'inner_corner_grass_water 0' },\n        { left: 'edge_grass_water 3', right: 'inner_corner_grass_water 3' },\n        { left: 'edge_rock_water 0', right: 'corner_rock_water 1' },\n        { left: 'edge_rock_water 0', right: 'edge_rock_water 0' },\n        { left: 'edge_rock_water 0', right: 'inner_corner_rock_water 2' },\n        { left: 'edge_rock_water 1', right: 'water 0' },\n        { left: 'edge_rock_water 1', right: 'edge_rock_water 3' },\n        { left: 'edge_rock_water 1', right: 'edge_grass_water 3' },\n        { left: 'edge_rock_water 1', right: 'corner_rock_water 0' },\n        { left: 'edge_rock_water 1', right: 'corner_rock_water 3' },\n        { left: 'edge_rock_water 1', right: 'corner_grass_water 0' },\n        { left: 'edge_rock_water 1', right: 'corner_grass_water 3' },\n        { left: 'edge_rock_water 2', right: 'edge_rock_water 2' },\n        { left: 'edge_rock_water 2', right: 'inner_corner_rock_water 1' },\n        { left: 'edge_rock_water 2', right: 'corner_rock_water 2' },\n        { left: 'edge_rock_water 3', right: 'rock 0' },\n        { left: 'edge_rock_water 3', right: 'inner_corner_rock_water 0' },\n        { left: 'edge_rock_water 3', right: 'inner_corner_rock_water 3' },\n        { left: 'edge_rock_water 3', right: 'edge_rock_water 1' },\n        { left: 'edge_rock_water 3', right: 'edge_grass_rock 1' },\n        { left: 'edge_rock_water 3', right: 'corner_grass_rock 1' },\n        { left: 'edge_rock_water 3', right: 'corner_grass_rock 2' },\n        { left: 'water 0', right: 'water 0' },\n        { left: 'water 0', right: 'corner_grass_water 0' },\n        { left: 'water 0', right: 'corner_grass_water 3' },\n        { left: 'water 0', right: 'corner_rock_water 0' },\n        { left: 'water 0', right: 'corner_rock_water 3' },\n        { left: 'water 0', right: 'edge_grass_water 3' },\n        { left: 'water 0', right: 'edge_rock_water 3' },\n        { left: 'rock 0', right: 'corner_grass_rock 1' },\n        { left: 'rock 0', right: 'corner_grass_rock 2' },\n        { left: 'rock 0', right: 'edge_grass_rock 1' },\n        { left: 'rock 0', right: 'edge_rock_water 1' },\n        { left: 'rock 0', right: 'inner_corner_rock_water 0' },\n        { left: 'rock 0', right: 'inner_corner_rock_water 3' },\n        { left: 'rock 0', right: 'rock 0' },\n        { left: 'grass 0', right: 'edge_grass_rock 3' },\n        { left: 'grass 0', right: 'edge_grass_water 1' },\n        { left: 'grass 0', right: 'grass 0' },\n        { left: 'grass 0', right: 'inner_corner_grass_rock 0' },\n        { left: 'grass 0', right: 'inner_corner_grass_rock 3' },\n        { left: 'grass 0', right: 'inner_corner_grass_water 0' },\n        { left: 'grass 0', right: 'inner_corner_grass_water 3' },\n    ],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaXNsYW5kLmRlZmluaXRpb24udHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxnRUFBZ0U7QUFDMUUsVUFBVSxpRUFBaUU7QUFDM0UsVUFBVSxnRUFBZ0U7QUFDMUUsVUFBVSwyRUFBMkU7QUFDckYsVUFBVSw0RUFBNEU7QUFDdEYsVUFBVSwyRUFBMkU7QUFDckYsVUFBVSw0REFBNEQ7QUFDdEUsVUFBVSw2REFBNkQ7QUFDdkUsVUFBVSw0REFBNEQ7QUFDdEUsVUFBVSwyQ0FBMkM7QUFDckQsVUFBVSxpREFBaUQ7QUFDM0QsVUFBVSxrREFBa0Q7QUFDNUQ7QUFDQTtBQUNBLFVBQVUsOENBQThDO0FBQ3hELFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsOENBQThDO0FBQ3hELFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsNkRBQTZEO0FBQ3ZFLFVBQVUsNkRBQTZEO0FBQ3ZFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsZ0RBQWdEO0FBQzFELFVBQVUsNkRBQTZEO0FBQ3ZFLFVBQVUsNkRBQTZEO0FBQ3ZFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsZ0RBQWdEO0FBQzFELFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0NBQStDO0FBQ3pELFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsNERBQTREO0FBQ3RFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0NBQStDO0FBQ3pELFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUscURBQXFEO0FBQy9ELFVBQVUsZ0VBQWdFO0FBQzFFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUscURBQXFEO0FBQy9ELFVBQVUsZ0VBQWdFO0FBQzFFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUseUVBQXlFO0FBQ25GLFVBQVUsbUVBQW1FO0FBQzdFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsc0RBQXNEO0FBQ2hFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUseUVBQXlFO0FBQ25GLFVBQVUseUVBQXlFO0FBQ25GLFVBQVUsc0RBQXNEO0FBQ2hFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsbUVBQW1FO0FBQzdFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUseUVBQXlFO0FBQ25GLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdUVBQXVFO0FBQ2pGLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsNkNBQTZDO0FBQ3ZELFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsOENBQThDO0FBQ3hELFVBQVUsd0RBQXdEO0FBQ2xFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsMkRBQTJEO0FBQ3JFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsOENBQThDO0FBQ3hELFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUsaUVBQWlFO0FBQzNFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsNkNBQTZDO0FBQ3ZELFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsd0RBQXdEO0FBQ2xFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsMERBQTBEO0FBQ3BFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsNENBQTRDO0FBQ3RELFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsK0RBQStEO0FBQ3pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUsdURBQXVEO0FBQ2pFLFVBQVUseURBQXlEO0FBQ25FLFVBQVUseURBQXlEO0FBQ25FLFVBQVUsbUNBQW1DO0FBQzdDLFVBQVUsZ0RBQWdEO0FBQzFELFVBQVUsZ0RBQWdEO0FBQzFELFVBQVUsK0NBQStDO0FBQ3pELFVBQVUsK0NBQStDO0FBQ3pELFVBQVUsOENBQThDO0FBQ3hELFVBQVUsNkNBQTZDO0FBQ3ZELFVBQVUsOENBQThDO0FBQ3hELFVBQVUsOENBQThDO0FBQ3hELFVBQVUsNENBQTRDO0FBQ3RELFVBQVUsNENBQTRDO0FBQ3RELFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsb0RBQW9EO0FBQzlELFVBQVUsaUNBQWlDO0FBQzNDLFVBQVUsNkNBQTZDO0FBQ3ZELFVBQVUsOENBQThDO0FBQ3hELFVBQVUsbUNBQW1DO0FBQzdDLFVBQVUscURBQXFEO0FBQy9ELFVBQVUscURBQXFEO0FBQy9ELFVBQVUsc0RBQXNEO0FBQ2hFLFVBQVUsc0RBQXNEO0FBQ2hFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZmMtYXJjaGlwZWxhZ28tMmQvLi9zcmMvaXNsYW5kLmRlZmluaXRpb24udHM/ZmY3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNsYW5kRGVmaW5pdGlvbiA9IHZvaWQgMDtcbmNvbnN0IGNvcm5lcldlaWdodCA9IDAuMDU7XG5jb25zdCBpbm5lckNvcm5lcldlaWdodCA9IDAuMDM7XG5jb25zdCBlZGdlV2VpZ2h0ID0gMC4wODtcbmNvbnN0IGxhbmRXZWlnaHQgPSAwLjM7XG5leHBvcnRzLmlzbGFuZERlZmluaXRpb24gPSB7XG4gICAgcGF0aDogJy4vYXNzZXRzL2lzbGFuZC8nLFxuICAgIHRpbGVzaXplOiAxNixcbiAgICB1bmlxdWU6IHRydWUsXG4gICAgdGlsZXM6IFtcbiAgICAgICAgeyBuYW1lOiAnY29ybmVyX2dyYXNzX3JvY2snLCBzeW1tZXRyeTogJ0wnLCB3ZWlnaHQ6IGNvcm5lcldlaWdodCB9LFxuICAgICAgICB7IG5hbWU6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXInLCBzeW1tZXRyeTogJ0wnLCB3ZWlnaHQ6IGNvcm5lcldlaWdodCB9LFxuICAgICAgICB7IG5hbWU6ICdjb3JuZXJfcm9ja193YXRlcicsIHN5bW1ldHJ5OiAnTCcsIHdlaWdodDogY29ybmVyV2VpZ2h0IH0sXG4gICAgICAgIHsgbmFtZTogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrJywgc3ltbWV0cnk6ICdMJywgd2VpZ2h0OiBpbm5lckNvcm5lcldlaWdodCB9LFxuICAgICAgICB7IG5hbWU6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXInLCBzeW1tZXRyeTogJ0wnLCB3ZWlnaHQ6IGlubmVyQ29ybmVyV2VpZ2h0IH0sXG4gICAgICAgIHsgbmFtZTogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyJywgc3ltbWV0cnk6ICdMJywgd2VpZ2h0OiBpbm5lckNvcm5lcldlaWdodCB9LFxuICAgICAgICB7IG5hbWU6ICdlZGdlX2dyYXNzX3JvY2snLCBzeW1tZXRyeTogJ1QnLCB3ZWlnaHQ6IGVkZ2VXZWlnaHQgfSxcbiAgICAgICAgeyBuYW1lOiAnZWRnZV9ncmFzc193YXRlcicsIHN5bW1ldHJ5OiAnVCcsIHdlaWdodDogZWRnZVdlaWdodCB9LFxuICAgICAgICB7IG5hbWU6ICdlZGdlX3JvY2tfd2F0ZXInLCBzeW1tZXRyeTogJ1QnLCB3ZWlnaHQ6IGVkZ2VXZWlnaHQgfSxcbiAgICAgICAgeyBuYW1lOiAnd2F0ZXInLCBzeW1tZXRyeTogJ1gnLCB3ZWlnaHQ6IDAuNyB9LFxuICAgICAgICB7IG5hbWU6ICdyb2NrJywgc3ltbWV0cnk6ICdYJywgd2VpZ2h0OiBsYW5kV2VpZ2h0IH0sXG4gICAgICAgIHsgbmFtZTogJ2dyYXNzJywgc3ltbWV0cnk6ICdYJywgd2VpZ2h0OiBsYW5kV2VpZ2h0IH0sXG4gICAgXSxcbiAgICBuZWlnaGJvcnM6IFtcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3JvY2sgMCcsIHJpZ2h0OiAncm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAwJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3JvY2sgMCcsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDAnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDAnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDEnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAncm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAzJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDMnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDMnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDMnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc19yb2NrIDMnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAwJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAxJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDEnLCByaWdodDogJ2Nvcm5lcl9ncmFzc193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDEnLCByaWdodDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAxJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAxJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDEnLCByaWdodDogJ3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDInLCByaWdodDogJ2Nvcm5lcl9ncmFzc193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMicsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDInLCByaWdodDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDInLCByaWdodDogJ3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9ncmFzc193YXRlciAzJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDAnLCByaWdodDogJ2VkZ2Vfcm9ja193YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfcm9ja193YXRlciAxJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDEnLCByaWdodDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDEnLCByaWdodDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDEnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDEnLCByaWdodDogJ3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDInLCByaWdodDogJ2Nvcm5lcl9ncmFzc193YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfcm9ja193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMicsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMicsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMicsIHJpZ2h0OiAnZWRnZV9ncmFzc193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdjb3JuZXJfcm9ja193YXRlciAyJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMicsIHJpZ2h0OiAnd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMycsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDAnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAwJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAwJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAxJywgcmlnaHQ6ICdncmFzcyAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAxJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDEnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAxJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdncmFzcyAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDInLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAyJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfcm9jayAzJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMCcsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAwJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAxJywgcmlnaHQ6ICdncmFzcyAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9ncmFzc193YXRlciAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDInLCByaWdodDogJ2dyYXNzIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAzJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDMnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDMnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAyJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAwJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAwJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMCcsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAncm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAxJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAxJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9ncmFzc19yb2NrIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDEnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDInLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDInLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDInLCByaWdodDogJ3JvY2sgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMicsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDInLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAyJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAzJywgcmlnaHQ6ICdjb3JuZXJfcm9ja193YXRlciAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAzJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMycsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDAnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3JvY2sgMCcsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfcm9jayAxJywgcmlnaHQ6ICdncmFzcyAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3JvY2sgMScsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDEnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfcm9jayAxJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDInLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAyJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3JvY2sgMicsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDInLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc19yb2NrIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfcm9jayAzJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc19yb2NrIDMnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfcm9jayAzJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3JvY2sgMycsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfcm9jayAzJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3JvY2sgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAwJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMCcsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMCcsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9ncmFzc193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3dhdGVyIDEnLCByaWdodDogJ3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAxJywgcmlnaHQ6ICdjb3JuZXJfcm9ja193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX2dyYXNzX3dhdGVyIDInLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAyJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAzJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMycsIHJpZ2h0OiAnZ3Jhc3MgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAzJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9ncmFzc193YXRlciAzJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfZ3Jhc3Nfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDAnLCByaWdodDogJ2Nvcm5lcl9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAwJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAxJywgcmlnaHQ6ICd3YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAxJywgcmlnaHQ6ICdlZGdlX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAxJywgcmlnaHQ6ICdjb3JuZXJfcm9ja193YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDEnLCByaWdodDogJ2Nvcm5lcl9ncmFzc193YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMScsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAyJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMicgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDInLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAyJywgcmlnaHQ6ICdjb3JuZXJfcm9ja193YXRlciAyJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycsIHJpZ2h0OiAncm9jayAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDMnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9yb2NrX3dhdGVyIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2VkZ2Vfcm9ja193YXRlciAzJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDMnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycsIHJpZ2h0OiAnY29ybmVyX2dyYXNzX3JvY2sgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnZWRnZV9yb2NrX3dhdGVyIDMnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ3dhdGVyIDAnLCByaWdodDogJ3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ3dhdGVyIDAnLCByaWdodDogJ2Nvcm5lcl9ncmFzc193YXRlciAwJyB9LFxuICAgICAgICB7IGxlZnQ6ICd3YXRlciAwJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnd2F0ZXIgMCcsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnd2F0ZXIgMCcsIHJpZ2h0OiAnY29ybmVyX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnd2F0ZXIgMCcsIHJpZ2h0OiAnZWRnZV9ncmFzc193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICd3YXRlciAwJywgcmlnaHQ6ICdlZGdlX3JvY2tfd2F0ZXIgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAncm9jayAwJywgcmlnaHQ6ICdjb3JuZXJfZ3Jhc3Nfcm9jayAxJyB9LFxuICAgICAgICB7IGxlZnQ6ICdyb2NrIDAnLCByaWdodDogJ2Nvcm5lcl9ncmFzc19yb2NrIDInIH0sXG4gICAgICAgIHsgbGVmdDogJ3JvY2sgMCcsIHJpZ2h0OiAnZWRnZV9ncmFzc19yb2NrIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ3JvY2sgMCcsIHJpZ2h0OiAnZWRnZV9yb2NrX3dhdGVyIDEnIH0sXG4gICAgICAgIHsgbGVmdDogJ3JvY2sgMCcsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX3JvY2tfd2F0ZXIgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAncm9jayAwJywgcmlnaHQ6ICdpbm5lcl9jb3JuZXJfcm9ja193YXRlciAzJyB9LFxuICAgICAgICB7IGxlZnQ6ICdyb2NrIDAnLCByaWdodDogJ3JvY2sgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZ3Jhc3MgMCcsIHJpZ2h0OiAnZWRnZV9ncmFzc19yb2NrIDMnIH0sXG4gICAgICAgIHsgbGVmdDogJ2dyYXNzIDAnLCByaWdodDogJ2VkZ2VfZ3Jhc3Nfd2F0ZXIgMScgfSxcbiAgICAgICAgeyBsZWZ0OiAnZ3Jhc3MgMCcsIHJpZ2h0OiAnZ3Jhc3MgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZ3Jhc3MgMCcsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMCcgfSxcbiAgICAgICAgeyBsZWZ0OiAnZ3Jhc3MgMCcsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3JvY2sgMycgfSxcbiAgICAgICAgeyBsZWZ0OiAnZ3Jhc3MgMCcsIHJpZ2h0OiAnaW5uZXJfY29ybmVyX2dyYXNzX3dhdGVyIDAnIH0sXG4gICAgICAgIHsgbGVmdDogJ2dyYXNzIDAnLCByaWdodDogJ2lubmVyX2Nvcm5lcl9ncmFzc193YXRlciAzJyB9LFxuICAgIF0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/island.definition.ts\n");

/***/ }),

/***/ "./src/lcg.ts":
/*!********************!*\
  !*** ./src/lcg.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lcgRandom = void 0;\nfunction normalizeSeed(seed) {\n    if (typeof seed === 'number') {\n        seed = Math.abs(seed);\n    }\n    else if (typeof seed === 'string') {\n        const string = seed;\n        seed = 0;\n        for (let i = 0; i < string.length; i++) {\n            seed = (seed + (i + 1) * (string.charCodeAt(i) % 96)) % 2147483647;\n        }\n    }\n    if (seed === 0) {\n        seed = 311;\n    }\n    return seed;\n}\nfunction lcgRandom(seed) {\n    let state = normalizeSeed(seed);\n    return function () {\n        const result = (state * 48271) % 2147483647;\n        state = result;\n        return result / 2147483647;\n    };\n}\nexports.lcgRandom = lcgRandom;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGNnLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZmMtYXJjaGlwZWxhZ28tMmQvLi9zcmMvbGNnLnRzP2Q4OWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sY2dSYW5kb20gPSB2b2lkIDA7XG5mdW5jdGlvbiBub3JtYWxpemVTZWVkKHNlZWQpIHtcbiAgICBpZiAodHlwZW9mIHNlZWQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHNlZWQgPSBNYXRoLmFicyhzZWVkKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHNlZWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZyA9IHNlZWQ7XG4gICAgICAgIHNlZWQgPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgc2VlZCA9IChzZWVkICsgKGkgKyAxKSAqIChzdHJpbmcuY2hhckNvZGVBdChpKSAlIDk2KSkgJSAyMTQ3NDgzNjQ3O1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChzZWVkID09PSAwKSB7XG4gICAgICAgIHNlZWQgPSAzMTE7XG4gICAgfVxuICAgIHJldHVybiBzZWVkO1xufVxuZnVuY3Rpb24gbGNnUmFuZG9tKHNlZWQpIHtcbiAgICBsZXQgc3RhdGUgPSBub3JtYWxpemVTZWVkKHNlZWQpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IChzdGF0ZSAqIDQ4MjcxKSAlIDIxNDc0ODM2NDc7XG4gICAgICAgIHN0YXRlID0gcmVzdWx0O1xuICAgICAgICByZXR1cm4gcmVzdWx0IC8gMjE0NzQ4MzY0NztcbiAgICB9O1xufVxuZXhwb3J0cy5sY2dSYW5kb20gPSBsY2dSYW5kb207XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lcg.ts\n");

/***/ }),

/***/ "./node_modules/wavefunctioncollapse/index.js":
/*!****************************************************!*\
  !*** ./node_modules/wavefunctioncollapse/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = {\n  OverlappingModel: __webpack_require__(/*! ./overlapping-model */ \"./node_modules/wavefunctioncollapse/overlapping-model.js\"),\n  SimpleTiledModel: __webpack_require__(/*! ./simple-tiled-model */ \"./node_modules/wavefunctioncollapse/simple-tiled-model.js\")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2F2ZWZ1bmN0aW9uY29sbGFwc2UvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBcUI7QUFDakQsb0JBQW9CLG1CQUFPLENBQUMsdUZBQXNCO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ZjLWFyY2hpcGVsYWdvLTJkLy4vbm9kZV9tb2R1bGVzL3dhdmVmdW5jdGlvbmNvbGxhcHNlL2luZGV4LmpzPzhhM2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBPdmVybGFwcGluZ01vZGVsOiByZXF1aXJlKCcuL292ZXJsYXBwaW5nLW1vZGVsJyksXG4gIFNpbXBsZVRpbGVkTW9kZWw6IHJlcXVpcmUoJy4vc2ltcGxlLXRpbGVkLW1vZGVsJylcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wavefunctioncollapse/index.js\n");

/***/ }),

/***/ "./node_modules/wavefunctioncollapse/model.js":
/*!****************************************************!*\
  !*** ./node_modules/wavefunctioncollapse/model.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst randomIndice = __webpack_require__(/*! ./random-indice */ \"./node_modules/wavefunctioncollapse/random-indice.js\");\n\nconst Model = function Model () {};\n\nModel.prototype.FMX = 0;\nModel.prototype.FMY = 0;\nModel.prototype.FMXxFMY = 0;\nModel.prototype.T = 0;\nModel.prototype.N = 0;\n\nModel.prototype.initiliazedField = false;\nModel.prototype.generationComplete = false;\n\nModel.prototype.wave = null;\nModel.prototype.compatible = null;\nModel.prototype.weightLogWeights = null;\nModel.prototype.sumOfWeights = 0;\nModel.prototype.sumOfWeightLogWeights = 0;\n\nModel.prototype.startingEntropy = 0;\n\nModel.prototype.sumsOfOnes = null;\nModel.prototype.sumsOfWeights = null;\nModel.prototype.sumsOfWeightLogWeights = null;\nModel.prototype.entropies = null;\n\nModel.prototype.propagator = null;\nModel.prototype.observed = null;\nModel.prototype.distribution = null;\n\nModel.prototype.stack = null;\nModel.prototype.stackSize = 0;\n\nModel.prototype.DX = [-1, 0, 1, 0];\nModel.prototype.DY = [0, 1, 0, -1];\nModel.prototype.opposite = [2, 3, 0, 1];\n\n/**\n * @protected\n */\nModel.prototype.initialize = function () {\n  this.distribution = new Array(this.T);\n\n  this.wave = new Array(this.FMXxFMY);\n  this.compatible = new Array(this.FMXxFMY);\n\n  for (let i = 0; i < this.FMXxFMY; i++) {\n    this.wave[i] = new Array(this.T);\n    this.compatible[i] = new Array(this.T);\n\n    for (let t = 0; t < this.T; t++) {\n      this.compatible[i][t] = [0,0,0,0];\n    }\n  }\n\n  this.weightLogWeights = new Array(this.T);\n  this.sumOfWeights = 0;\n  this.sumOfWeightLogWeights = 0;\n\n  for (let t = 0; t < this.T; t++) {\n    this.weightLogWeights[t] = this.weights[t] * Math.log(this.weights[t]);\n    this.sumOfWeights += this.weights[t];\n    this.sumOfWeightLogWeights += this.weightLogWeights[t];\n  }\n\n  this.startingEntropy = Math.log(this.sumOfWeights) - this.sumOfWeightLogWeights / this.sumOfWeights;\n\n  this.sumsOfOnes = new Array(this.FMXxFMY);\n  this.sumsOfWeights = new Array(this.FMXxFMY);\n  this.sumsOfWeightLogWeights = new Array(this.FMXxFMY);\n  this.entropies = new Array(this.FMXxFMY);\n\n  this.stack = new Array(this.FMXxFMY * this.T);\n  this.stackSize = 0;\n};\n\n/**\n *\n * @param {Function} rng Random number generator function\n *\n * @returns {*}\n *\n * @protected\n */\nModel.prototype.observe = function (rng) {\n\n  let min = 1000;\n  let argmin = -1;\n\n  for (let i = 0; i < this.FMXxFMY; i++) {\n    if (this.onBoundary(i % this.FMX, i / this.FMX | 0)) continue;\n\n    const amount = this.sumsOfOnes[i];\n\n    if (amount === 0) return false;\n\n    const entropy = this.entropies[i];\n\n    if (amount > 1 && entropy <= min) {\n      const noise = 0.000001 * rng();\n\n      if (entropy + noise < min) {\n        min = entropy + noise;\n        argmin = i;\n      }\n    }\n  }\n\n  if (argmin === -1) {\n    this.observed = new Array(this.FMXxFMY);\n\n    for (let i = 0; i < this.FMXxFMY; i++) {\n      for (let t = 0; t < this.T; t++) {\n        if (this.wave[i][t]) {\n          this.observed[i] = t;\n          break;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  for (let t = 0; t < this.T; t++) {\n    this.distribution[t] = this.wave[argmin][t] ? this.weights[t] : 0;\n  }\n  const r = randomIndice(this.distribution, rng());\n\n  const w = this.wave[argmin];\n  for (let t = 0; t < this.T; t++) {\n    if (w[t] !== (t === r)) this.ban(argmin, t);\n  }\n\n  return null;\n};\n\n/**\n * @protected\n */\nModel.prototype.propagate = function () {\n  while (this.stackSize > 0) {\n    const e1 = this.stack[this.stackSize - 1];\n    this.stackSize--;\n\n    const i1 = e1[0];\n    const x1 = i1 % this.FMX;\n    const y1 = i1 / this.FMX | 0;\n\n    for (let d = 0; d < 4; d++) {\n      const dx = this.DX[d];\n      const dy = this.DY[d];\n\n      let x2 = x1 + dx;\n      let y2 = y1 + dy;\n\n      if (this.onBoundary(x2, y2)) continue;\n\n      if (x2 < 0) x2 += this.FMX;\n      else if (x2 >= this.FMX) x2 -= this.FMX;\n      if (y2 < 0) y2 += this.FMY;\n      else if (y2 >= this.FMY) y2 -= this.FMY;\n\n      const i2 = x2 + y2 * this.FMX;\n      const p = this.propagator[d][e1[1]];\n      const compat = this.compatible[i2];\n\n      for (let l = 0; l < p.length; l++) {\n        const t2 = p[l];\n        const comp = compat[t2];\n        comp[d]--;\n        if (comp[d] == 0) this.ban(i2, t2);\n      }\n    }\n  }\n};\n\n/**\n * Execute a single iteration\n *\n * @param {Function} rng Random number generator function\n *\n * @returns {boolean|null}\n *\n * @protected\n */\nModel.prototype.singleIteration = function (rng) {\n  const result = this.observe(rng);\n\n  if (result !== null) {\n    this.generationComplete = result;\n\n    return !!result;\n  }\n\n  this.propagate();\n\n  return null;\n};\n\n/**\n * Execute a fixed number of iterations. Stop when the generation is successful or reaches a contradiction.\n *\n * @param {int} [iterations=0] Maximum number of iterations to execute (0 = infinite)\n * @param {Function|null} [rng=Math.random] Random number generator function\n *\n * @returns {boolean} Success\n *\n * @public\n */\nModel.prototype.iterate = function (iterations, rng) {\n  if (!this.wave) this.initialize();\n\n  if (!this.initiliazedField) {\n    this.clear();\n  }\n\n  iterations = iterations || 0;\n  rng = rng || Math.random;\n\n  for (let i = 0; i < iterations || iterations === 0; i++) {\n    const result = this.singleIteration(rng);\n\n    if (result !== null) {\n      return !!result;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Execute a complete new generation\n *\n * @param {Function|null} [rng=Math.random] Random number generator function\n *\n * @returns {boolean} Success\n *\n * @public\n */\nModel.prototype.generate = function (rng) {\n  rng = rng || Math.random;\n\n  if (!this.wave) this.initialize();\n\n  this.clear();\n\n  while(true) {\n    const result = this.singleIteration(rng);\n\n    if (result !== null) {\n      return !!result;\n    }\n  }\n};\n\n/**\n * Check whether the previous generation completed successfully\n *\n * @returns {boolean}\n *\n * @public\n */\nModel.prototype.isGenerationComplete = function () {\n  return this.generationComplete;\n};\n\n/**\n *\n * @param {int} i\n * @param {int} t\n *\n * @protected\n */\nModel.prototype.ban = function (i, t) {\n  const comp = this.compatible[i][t];\n\n  for (let d = 0; d < 4; d++) {\n    comp[d] = 0;\n  }\n\n  this.wave[i][t] = false;\n\n  this.stack[this.stackSize] = [i, t];\n  this.stackSize++;\n\n  this.sumsOfOnes[i] -= 1;\n  this.sumsOfWeights[i] -= this.weights[t];\n  this.sumsOfWeightLogWeights[i] -= this.weightLogWeights[t];\n\n  const sum = this.sumsOfWeights[i];\n  this.entropies[i] = Math.log(sum) - this.sumsOfWeightLogWeights[i] / sum;\n};\n\n/**\n * Clear the internal state to start a new generation\n *\n * @public\n */\nModel.prototype.clear = function () {\n  for (let i = 0; i < this.FMXxFMY; i++) {\n    for (let t = 0; t < this.T; t++) {\n      this.wave[i][t] = true;\n\n      for (let d = 0; d < 4; d++) {\n        this.compatible[i][t][d] = this.propagator[this.opposite[d]][t].length;\n      }\n    }\n\n    this.sumsOfOnes[i] = this.weights.length;\n    this.sumsOfWeights[i] = this.sumOfWeights;\n    this.sumsOfWeightLogWeights[i] = this.sumOfWeightLogWeights;\n    this.entropies[i] = this.startingEntropy;\n  }\n\n  this.initiliazedField = true;\n  this.generationComplete = false;\n};\n\nmodule.exports = Model;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wavefunctioncollapse/model.js\n");

/***/ }),

/***/ "./node_modules/wavefunctioncollapse/overlapping-model.js":
/*!****************************************************************!*\
  !*** ./node_modules/wavefunctioncollapse/overlapping-model.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Model = __webpack_require__(/*! ./model */ \"./node_modules/wavefunctioncollapse/model.js\");\n\n/**\n *\n * @param {Uint8Array|Uint8ClampedArray} data The RGBA data of the source image\n * @param {int} dataWidth The width of the source image\n * @param {int} dataHeight The height of the source image\n * @param {int} N Size of the patterns\n * @param {int} width The width of the generation\n * @param {int} height The height of the generation\n * @param {boolean} periodicInput Whether the source image is to be considered as periodic / as a repeatable texture\n * @param {boolean} periodicOutput Whether the generation should be periodic / a repeatable texture\n * @param {int} symmetry Allowed symmetries from 1 (no symmetry) to 8 (all mirrored / rotated variations)\n * @param {int} [ground=0] Id of the specific pattern to use as the bottom of the generation ( see https://github.com/mxgmn/WaveFunctionCollapse/issues/3#issuecomment-250995366 )\n *\n * @constructor\n */\nconst OverlappingModel = function OverlappingModel (data, dataWidth, dataHeight, N, width, height, periodicInput, periodicOutput, symmetry, ground) {\n  ground = ground || 0;\n\n  this.N = N;\n  this.FMX = width;\n  this.FMY = height;\n  this.FMXxFMY = width * height;\n  this.periodic = periodicOutput;\n\n  const SMX = dataWidth;\n  const SMY = dataHeight;\n  const sample = new Array(SMX);\n  for (let i = 0; i < SMX; i++) {\n    sample[i] = new Array(dataHeight);\n  }\n\n  this.colors = [];\n  const colorMap = {};\n\n  for (let y = 0; y < dataHeight; y++) {\n    for (let x = 0; x < dataWidth; x++) {\n      const indexPixel = (y * dataWidth + x) * 4;\n      const color = [data[indexPixel], data[indexPixel + 1], data[indexPixel + 2], data[indexPixel + 3]];\n      const colorMapIndex = color.join('-');\n\n      if (!colorMap.hasOwnProperty(colorMapIndex)) {\n        colorMap[colorMapIndex] = this.colors.length;\n        this.colors.push(color);\n      }\n\n      sample[x][y] = colorMap[colorMapIndex];\n    }\n  }\n\n  const C = this.colors.length;\n  const W = Math.pow(C, N * N);\n\n  const pattern = function pattern (f) {\n    let result = new Array(N * N);\n    for (let y = 0; y < N; y++) {\n      for (let x = 0; x < N; x++) {\n        result[x + y * N] = f(x, y);\n      }\n    }\n\n    return result;\n  };\n\n  const patternFromSample = function patternFromSample (x, y) {\n    return pattern(function (dx, dy) {\n      return sample[(x + dx) % dataWidth][(y + dy) % dataHeight];\n    });\n  };\n\n  const rotate = function rotate (p) {\n    return pattern(function (x, y) {\n      return p[N - 1 - y + x * N];\n    });\n  };\n\n  const reflect = function reflect (p) {\n    return pattern(function (x, y) {\n      return p[N - 1 - x + y * N];\n    });\n  };\n\n  const index = function index (p) {\n    let result = 0;\n    let power = 1;\n\n    for (let i = 0; i < p.length; i++) {\n      result += p[p.length - 1 - i] * power;\n      power *= C;\n    }\n\n    return result;\n  };\n\n  const patternFromIndex = function patternFromIndex (ind) {\n    let residue = ind;\n    let power = W;\n    const result = new Array(N * N);\n\n    for (let i = 0; i < result.length; i++) {\n      power /= C;\n      let count = 0;\n\n      while (residue >= power) {\n        residue -= power;\n        count++;\n      }\n\n      result[i] = count;\n    }\n\n    return result;\n  };\n\n  const weights = {};\n  const weightsKeys = []; // Object.keys won't preserve the order of creation, so we store them separately in an array\n\n  for (let y = 0; y < (periodicInput ? dataHeight : dataHeight - N + 1); y++) {\n    for (let x = 0; x < (periodicInput ? dataWidth : dataWidth - N + 1); x++) {\n      const ps = new Array(8);\n      ps[0] = patternFromSample(x, y);\n      ps[1] = reflect(ps[0]);\n      ps[2] = rotate(ps[0]);\n      ps[3] = reflect(ps[2]);\n      ps[4] = rotate(ps[2]);\n      ps[5] = reflect(ps[4]);\n      ps[6] = rotate(ps[4]);\n      ps[7] = reflect(ps[6]);\n\n      for (let k = 0; k < symmetry; k++) {\n        const ind = index(ps[k]);\n\n        if (!!weights[ind]) {\n          weights[ind]++;\n        } else {\n          weightsKeys.push(ind);\n          weights[ind] = 1;\n        }\n      }\n    }\n  }\n\n  this.T = weightsKeys.length;\n  this.ground = (ground + this.T) % this.T;\n  this.patterns = new Array(this.T);\n  this.weights = new Array(this.T);\n\n  for (let i = 0; i < this.T; i++) {\n    const w = parseInt(weightsKeys[i], 10);\n\n    this.patterns[i] = patternFromIndex(w);\n    this.weights[i] = weights[w]\n  }\n\n  const agrees = function agrees (p1, p2, dx, dy) {\n    const xmin = dx < 0 ? 0 : dx;\n    const xmax = dx < 0 ? dx + N : N;\n    const ymin = dy < 0 ? 0 : dy;\n    const ymax = dy < 0 ? dy + N : N;\n\n    for (let y = ymin; y < ymax; y++) {\n      for (let x = xmin; x < xmax; x++) {\n        if (p1[x + N * y] != p2[x - dx + N * (y - dy)]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  this.propagator = new Array(4);\n\n  for (let d = 0; d < 4; d++) {\n    this.propagator[d] = new Array(this.T);\n    for (let t = 0; t < this.T; t++) {\n      const list = [];\n\n      for (let t2 = 0; t2 < this.T; t2++) {\n        if (agrees(this.patterns[t], this.patterns[t2], this.DX[d], this.DY[d])) {\n          list.push(t2);\n        }\n      }\n\n      this.propagator[d][t] = list;\n    }\n  }\n};\n\nOverlappingModel.prototype = Object.create(Model.prototype);\nOverlappingModel.prototype.constructor = OverlappingModel;\n\n/**\n * @param {int} x\n * @param {int} y\n *\n * @returns {boolean}\n *\n * @protected\n */\nOverlappingModel.prototype.onBoundary = function (x, y) {\n  return !this.periodic && (x + this.N  > this.FMX || y + this.N > this.FMY || x < 0 || y < 0);\n};\n\n/**\n * Clear the internal state\n *\n * @protected\n */\nOverlappingModel.prototype.clear = function () {\n  Model.prototype.clear.call(this);\n\n  if (this.ground !== 0) {\n    for (let x = 0; x < this.FMX; x++) {\n      for (let t = 0; t < this.T; t++) {\n        if (t !== this.ground) {\n          this.ban(x + (this.FMY - 1) * this.FMX, t);\n        }\n      }\n\n      for (let y = 0; y < this.FMY - 1; y++) {\n        this.ban(x + y * this.FMX, this.ground);\n      }\n    }\n\n    this.propagate();\n  }\n};\n\n/**\n * Retrieve the RGBA data\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} [array] Array to write the RGBA data into (must already be set to the correct size), if not set a new Uint8Array will be created and returned\n *\n * @returns {Array|Uint8Array|Uint8ClampedArray} RGBA data\n *\n * @public\n */\nOverlappingModel.prototype.graphics = function (array) {\n  array = array || new Uint8Array(this.FMXxFMY * 4);\n\n  if (this.isGenerationComplete()) {\n    this.graphicsComplete(array);\n  } else {\n    this.graphicsIncomplete(array);\n  }\n\n  return array;\n};\n\n/**\n * Set the RGBA data for a complete generation in a given array\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} array Array to write the RGBA data into\n *\n * @protected\n */\nOverlappingModel.prototype.graphicsComplete = function (array) {\n  for (let y = 0; y < this.FMY; y++) {\n    const dy = y < this.FMY - this.N + 1 ? 0 : this.N - 1;\n    for (let x = 0; x < this.FMX; x++) {\n      const dx = x < this.FMX - this.N + 1 ? 0 : this.N - 1;\n\n      const pixelIndex = (y * this.FMX + x) * 4;\n      const color = this.colors[this.patterns[this.observed[x - dx + (y - dy) * this.FMX]][dx + dy * this.N]];\n\n      array[pixelIndex] = color[0];\n      array[pixelIndex + 1] = color[1];\n      array[pixelIndex + 2] = color[2];\n      array[pixelIndex + 3] = color[3];\n    }\n  }\n};\n\n/**\n * Set the RGBA data for an incomplete generation in a given array\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} array Array to write the RGBA data into\n *\n * @protected\n */\nOverlappingModel.prototype.graphicsIncomplete = function (array) {\n  for (let i = 0; i < this.FMXxFMY; i++) {\n    const x = i % this.FMX;\n    const y = i / this.FMX | 0;\n\n    let contributors = 0;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    let a = 0;\n\n    for (let dy = 0; dy < this.N; dy++) {\n      for (let dx = 0; dx < this.N; dx++) {\n        let sx = x - dx;\n        if (sx < 0) sx += this.FMX;\n\n        let sy = y - dy;\n        if (sy < 0) sy += this.FMY;\n\n        if (this.onBoundary(sx, sy)) continue;\n\n        const s = sx + sy * this.FMX;\n\n        for (let t = 0; t < this.T; t++) {\n          if (this.wave[s][t]) {\n            contributors++;\n\n            const color = this.colors[this.patterns[t][dx + dy * this.N]];\n\n            r += color[0];\n            g += color[1];\n            b += color[2];\n            a += color[3];\n          }\n        }\n      }\n    }\n\n    const pixelIndex = i * 4;\n\n    array[pixelIndex] = r / contributors;\n    array[pixelIndex + 1] = g / contributors;\n    array[pixelIndex + 2] = b / contributors;\n    array[pixelIndex + 3] = a / contributors;\n  }\n};\n\nmodule.exports = OverlappingModel;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wavefunctioncollapse/overlapping-model.js\n");

/***/ }),

/***/ "./node_modules/wavefunctioncollapse/random-indice.js":
/*!************************************************************!*\
  !*** ./node_modules/wavefunctioncollapse/random-indice.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\n\n/**\n *\n * @param {number[]} array\n * @param {float} r\n */\nfunction randomIndice (array, r) {\n  let sum = 0;\n  let x = 0;\n  let i = 0;\n\n  for (; i < array.length; i++) {\n    sum += array[i];\n  }\n\n  i = 0;\n  r *= sum;\n\n  while (r && i < array.length) {\n    x += array[i];\n    if (r <= x) {\n      return i;\n    }\n    i++;\n  }\n\n  return 0;\n}\n\nmodule.exports = randomIndice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2F2ZWZ1bmN0aW9uY29sbGFwc2UvcmFuZG9tLWluZGljZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsa0JBQWtCO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ZjLWFyY2hpcGVsYWdvLTJkLy4vbm9kZV9tb2R1bGVzL3dhdmVmdW5jdGlvbmNvbGxhcHNlL3JhbmRvbS1pbmRpY2UuanM/OTQzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKlxuICogQHBhcmFtIHtudW1iZXJbXX0gYXJyYXlcbiAqIEBwYXJhbSB7ZmxvYXR9IHJcbiAqL1xuZnVuY3Rpb24gcmFuZG9tSW5kaWNlIChhcnJheSwgcikge1xuICBsZXQgc3VtID0gMDtcbiAgbGV0IHggPSAwO1xuICBsZXQgaSA9IDA7XG5cbiAgZm9yICg7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIHN1bSArPSBhcnJheVtpXTtcbiAgfVxuXG4gIGkgPSAwO1xuICByICo9IHN1bTtcblxuICB3aGlsZSAociAmJiBpIDwgYXJyYXkubGVuZ3RoKSB7XG4gICAgeCArPSBhcnJheVtpXTtcbiAgICBpZiAociA8PSB4KSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gICAgaSsrO1xuICB9XG5cbiAgcmV0dXJuIDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmFuZG9tSW5kaWNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wavefunctioncollapse/random-indice.js\n");

/***/ }),

/***/ "./node_modules/wavefunctioncollapse/simple-tiled-model.js":
/*!*****************************************************************!*\
  !*** ./node_modules/wavefunctioncollapse/simple-tiled-model.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Model = __webpack_require__(/*! ./model */ \"./node_modules/wavefunctioncollapse/model.js\");\n\n/**\n *\n * @param {object} data Tiles, subset and constraints definitions\n * @param {string} subsetName Name of the subset to use from the data, use all tiles if falsy\n * @param {int} width The width of the generation\n * @param {int} height The height of the generation\n * @param {boolean} periodic Whether the source image is to be considered as periodic / as a repeatable texture\n *\n * @constructor\n */\nconst SimpleTiledModel = function SimpleTiledModel (data, subsetName, width, height, periodic) {\n  const tilesize = data.tilesize || 16;\n\n  this.FMX = width;\n  this.FMY = height;\n  this.FMXxFMY = width * height;\n\n  this.periodic = periodic;\n  this.tilesize = tilesize;\n\n  const unique = !!data.unique;\n  let subset = null;\n\n  if (subsetName && data.subsets && !!data.subsets[subsetName]) {\n    subset = data.subsets[subsetName];\n  }\n\n  const tile = function tile (f) {\n    const result = new Array(tilesize * tilesize);\n\n    for (let y = 0; y < tilesize; y++) {\n      for (let x = 0; x < tilesize; x++) {\n        result[x + y * tilesize] = f(x, y);\n      }\n    }\n\n    return result;\n  };\n\n  const rotate = function rotate (array) {\n    return tile(function (x, y) {\n      return array[tilesize - 1 - y + x * tilesize];\n    });\n  };\n\n  const reflect = function reflect(array) {\n    return tile(function (x, y) {\n      return array[tilesize - 1 - x + y * tilesize];\n    });\n  };\n\n  this.tiles = [];\n  const tempStationary = [];\n\n  const action = [];\n  const firstOccurrence = {};\n\n  let funcA;\n  let funcB;\n  let cardinality;\n\n  for (let i = 0; i < data.tiles.length; i++) {\n    const currentTile = data.tiles[i];\n\n    if (subset !== null && subset.indexOf(currentTile.name) === -1) {\n      continue;\n    }\n\n    switch (currentTile.symmetry) {\n      case 'L':\n        cardinality = 4;\n        funcA = function (i) {\n          return (i + 1) % 4;\n        };\n        funcB = function (i) {\n          return i % 2 === 0 ? i + 1 : i - 1;\n        };\n        break;\n      case 'T':\n        cardinality = 4;\n        funcA = function (i) {\n          return (i + 1) % 4;\n        };\n        funcB = function (i) {\n          return i % 2 === 0 ? i : 4 - i;\n        };\n        break;\n      case 'I':\n        cardinality = 2;\n        funcA = function (i) {\n          return 1 - i;\n        };\n        funcB = function (i) {\n          return i;\n        };\n        break;\n      case '\\\\':\n        cardinality = 2;\n        funcA = function (i) {\n          return 1 - i;\n        };\n        funcB = function (i) {\n          return 1 - i;\n        };\n        break;\n      case 'F':\n        cardinality = 8;\n        funcA = function (i) {\n          return i < 4 ? (i + 1) % 4 : 4 + (i - 1) % 4;\n        };\n        funcB = function (i) {\n          return i < 4 ? i + 4 : i - 4;\n        };\n        break;\n      default:\n        cardinality = 1;\n        funcA = function (i) {\n          return i;\n        };\n        funcB = function (i) {\n          return i;\n        };\n        break;\n    }\n\n    this.T = action.length;\n    firstOccurrence[currentTile.name] = this.T;\n\n    for (let t = 0; t < cardinality; t++) {\n      action.push([\n        this.T + t,\n        this.T + funcA(t),\n        this.T + funcA(funcA(t)),\n        this.T + funcA(funcA(funcA(t))),\n        this.T + funcB(t),\n        this.T + funcB(funcA(t)),\n        this.T + funcB(funcA(funcA(t))),\n        this.T + funcB(funcA(funcA(funcA(t))))\n      ]);\n    }\n\n\n    let bitmap;\n\n    if (unique) {\n      for (let t = 0; t < cardinality; t++) {\n        bitmap = currentTile.bitmap[t];\n        this.tiles.push(tile(function (x, y) {\n          return [\n            bitmap[(tilesize * y + x) * 4],\n            bitmap[(tilesize * y + x) * 4 + 1],\n            bitmap[(tilesize * y + x) * 4 + 2],\n            bitmap[(tilesize * y + x) * 4 + 3]\n          ];\n        }));\n      }\n    } else {\n      bitmap = currentTile.bitmap;\n      this.tiles.push(tile(function (x, y) {\n        return [\n          bitmap[(tilesize * y + x) * 4],\n          bitmap[(tilesize * y + x) * 4 + 1],\n          bitmap[(tilesize * y + x) * 4 + 2],\n          bitmap[(tilesize * y + x) * 4 + 3]\n        ];\n      }));\n\n      for (let t = 1; t < cardinality; t++) {\n        this.tiles.push(t < 4 ? rotate(this.tiles[this.T + t - 1]) : reflect(this.tiles[this.T + t - 4]));\n      }\n    }\n\n    for (let t = 0; t < cardinality; t++) {\n      tempStationary.push(currentTile.weight || 1);\n    }\n\n  }\n\n  this.T = action.length;\n  this.weights = tempStationary;\n\n  this.propagator = new Array(4);\n  const tempPropagator = new Array(4);\n\n  for (let i = 0; i < 4; i++) {\n    this.propagator[i] = new Array(this.T);\n    tempPropagator[i] = new Array(this.T);\n    for (let t = 0; t < this.T; t++) {\n      tempPropagator[i][t] = new Array(this.T);\n      for (let t2 = 0; t2 < this.T; t2++) {\n        tempPropagator[i][t][t2] = false;\n      }\n    }\n  }\n\n  for (let i = 0; i < data.neighbors.length; i++) {\n    const neighbor = data.neighbors[i];\n\n    const left = neighbor.left.split(' ').filter(function (v) {\n      return v.length;\n    });\n    const right = neighbor.right.split(' ').filter(function (v) {\n      return v.length;\n    });\n\n    if (subset !== null && (subset.indexOf(left[0]) === -1 || subset.indexOf(right[0]) === -1)) {\n      continue;\n    }\n\n    const L = action[firstOccurrence[left[0]]][left.length == 1 ? 0 : parseInt(left[1], 10)];\n    const D = action[L][1];\n    const R = action[firstOccurrence[right[0]]][right.length == 1 ? 0 : parseInt(right[1], 10)];\n    const U = action[R][1];\n\n    tempPropagator[0][R][L] = true;\n    tempPropagator[0][action[R][6]][action[L][6]] = true;\n    tempPropagator[0][action[L][4]][action[R][4]] = true;\n    tempPropagator[0][action[L][2]][action[R][2]] = true;\n\n    tempPropagator[1][U][D] = true;\n    tempPropagator[1][action[D][6]][action[U][6]] = true;\n    tempPropagator[1][action[U][4]][action[D][4]] = true;\n    tempPropagator[1][action[D][2]][action[U][2]] = true;\n  }\n\n  for (let t = 0; t < this.T; t++) {\n    for (let t2 = 0; t2 < this.T; t2++) {\n      tempPropagator[2][t][t2] = tempPropagator[0][t2][t];\n      tempPropagator[3][t][t2] = tempPropagator[1][t2][t];\n    }\n  }\n\n  for (let d = 0; d < 4; d++) {\n    for (let t1 = 0; t1 < this.T; t1++) {\n      const sp = [];\n      const tp = tempPropagator[d][t1];\n\n      for (let t2 = 0; t2 < this.T; t2++) {\n        if (tp[t2]) {\n          sp.push(t2);\n        }\n      }\n\n      this.propagator[d][t1] = sp;\n    }\n  }\n};\n\nSimpleTiledModel.prototype = Object.create(Model.prototype);\nSimpleTiledModel.prototype.constructor = SimpleTiledModel;\n\n/**\n *\n * @param {int} x\n * @param {int} y\n *\n * @returns {boolean}\n *\n * @protected\n */\nSimpleTiledModel.prototype.onBoundary = function (x, y) {\n  return !this.periodic && (x < 0 || y < 0 || x >= this.FMX || y >= this.FMY);\n};\n\n/**\n * Retrieve the RGBA data\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} [array] Array to write the RGBA data into (must already be set to the correct size), if not set a new Uint8Array will be created and returned\n * @param {Array|Uint8Array|Uint8ClampedArray} [defaultColor] RGBA data of the default color to use on untouched tiles\n *\n * @returns {Array|Uint8Array|Uint8ClampedArray} RGBA data\n *\n * @public\n */\nSimpleTiledModel.prototype.graphics = function (array, defaultColor) {\n  array = array || new Uint8Array(this.FMXxFMY * this.tilesize * this.tilesize * 4);\n\n  if (this.isGenerationComplete()) {\n    this.graphicsComplete(array);\n  } else {\n    this.graphicsIncomplete(array, defaultColor);\n  }\n\n  return array;\n};\n\n/**\n * Set the RGBA data for a complete generation in a given array\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} [array] Array to write the RGBA data into, if not set a new Uint8Array will be created and returned\n *\n * @protected\n */\nSimpleTiledModel.prototype.graphicsComplete = function (array) {\n  for (let x = 0; x < this.FMX; x++) {\n    for (let y = 0; y < this.FMY; y++) {\n      const tile = this.tiles[this.observed[x + y * this.FMX]];\n\n      for (let yt = 0; yt < this.tilesize; yt++) {\n        for (let xt = 0; xt < this.tilesize; xt++) {\n          const pixelIndex = (x * this.tilesize + xt + (y * this.tilesize + yt) * this.FMX * this.tilesize) * 4;\n          const color = tile[xt + yt * this.tilesize];\n\n          array[pixelIndex] = color[0];\n          array[pixelIndex + 1] = color[1];\n          array[pixelIndex + 2] = color[2];\n          array[pixelIndex + 3] = color[3];\n        }\n      }\n    }\n  }\n};\n\n/**\n * Set the RGBA data for an incomplete generation in a given array\n *\n * @param {Array|Uint8Array|Uint8ClampedArray} [array] Array to write the RGBA data into, if not set a new Uint8Array will be created and returned\n * @param {Array|Uint8Array|Uint8ClampedArray} [defaultColor] RGBA data of the default color to use on untouched tiles\n *\n * @protected\n */\nSimpleTiledModel.prototype.graphicsIncomplete = function (array, defaultColor) {\n  if (!defaultColor || defaultColor.length !== 4) {\n    defaultColor = false;\n  }\n\n  for (let x = 0; x < this.FMX; x++) {\n    for (let y = 0; y < this.FMY; y++) {\n      const w = this.wave[x + y * this.FMX];\n      let amount = 0;\n      let sumWeights = 0;\n\n      for (let t = 0; t < this.T; t++) {\n        if (w[t]) {\n          amount++;\n          sumWeights += this.weights[t];\n        }\n      }\n\n      const lambda = 1 / sumWeights;\n\n      for (let yt = 0; yt < this.tilesize; yt++) {\n        for (let xt = 0; xt < this.tilesize; xt++) {\n          const pixelIndex = (x * this.tilesize + xt + (y * this.tilesize + yt) * this.FMX * this.tilesize) * 4;\n\n          if (defaultColor && amount === this.T) {\n            array[pixelIndex] = defaultColor[0];\n            array[pixelIndex + 1] = defaultColor[1];\n            array[pixelIndex + 2] = defaultColor[2];\n            array[pixelIndex + 3] = defaultColor[3];\n          } else {\n            let r = 0;\n            let g = 0;\n            let b = 0;\n            let a = 0;\n\n            for (let t = 0; t < this.T; t++) {\n              if (w[t]) {\n                const c = this.tiles[t][xt + yt * this.tilesize];\n                const weight = this.weights[t] * lambda;\n                r+= c[0] * weight;\n                g+= c[1] * weight;\n                b+= c[2] * weight;\n                a+= c[3] * weight;\n              }\n            }\n\n            array[pixelIndex] = r;\n            array[pixelIndex + 1] = g;\n            array[pixelIndex + 2] = b;\n            array[pixelIndex + 3] = a;\n          }\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = SimpleTiledModel;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2F2ZWZ1bmN0aW9uY29sbGFwc2Uvc2ltcGxlLXRpbGVkLW1vZGVsLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsbUJBQU8sQ0FBQyw2REFBUzs7QUFFL0I7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsS0FBSztBQUNoQixXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsdUJBQXVCO0FBQ3pDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUCxzQkFBc0IsaUJBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBLHVCQUF1QixhQUFhO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQiwyQkFBMkI7QUFDN0M7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsWUFBWTtBQUM5QixxQkFBcUIsYUFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QixxQkFBcUIsYUFBYTtBQUNsQztBQUNBOztBQUVBLHVCQUF1QixhQUFhO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsS0FBSztBQUNoQixXQUFXLEtBQUs7QUFDaEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0NBQW9DO0FBQy9DLFdBQVcsb0NBQW9DO0FBQy9DO0FBQ0EsYUFBYSxvQ0FBb0M7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDLG9CQUFvQixjQUFjO0FBQ2xDOztBQUVBLHVCQUF1QixvQkFBb0I7QUFDM0MseUJBQXlCLG9CQUFvQjtBQUM3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQyxXQUFXLG9DQUFvQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsY0FBYztBQUNoQyxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLFlBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx1QkFBdUIsb0JBQW9CO0FBQzNDLHlCQUF5QixvQkFBb0I7QUFDN0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw0QkFBNEIsWUFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZmMtYXJjaGlwZWxhZ28tMmQvLi9ub2RlX21vZHVsZXMvd2F2ZWZ1bmN0aW9uY29sbGFwc2Uvc2ltcGxlLXRpbGVkLW1vZGVsLmpzPzAzMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IE1vZGVsID0gcmVxdWlyZSgnLi9tb2RlbCcpO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YSBUaWxlcywgc3Vic2V0IGFuZCBjb25zdHJhaW50cyBkZWZpbml0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IHN1YnNldE5hbWUgTmFtZSBvZiB0aGUgc3Vic2V0IHRvIHVzZSBmcm9tIHRoZSBkYXRhLCB1c2UgYWxsIHRpbGVzIGlmIGZhbHN5XG4gKiBAcGFyYW0ge2ludH0gd2lkdGggVGhlIHdpZHRoIG9mIHRoZSBnZW5lcmF0aW9uXG4gKiBAcGFyYW0ge2ludH0gaGVpZ2h0IFRoZSBoZWlnaHQgb2YgdGhlIGdlbmVyYXRpb25cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gcGVyaW9kaWMgV2hldGhlciB0aGUgc291cmNlIGltYWdlIGlzIHRvIGJlIGNvbnNpZGVyZWQgYXMgcGVyaW9kaWMgLyBhcyBhIHJlcGVhdGFibGUgdGV4dHVyZVxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5jb25zdCBTaW1wbGVUaWxlZE1vZGVsID0gZnVuY3Rpb24gU2ltcGxlVGlsZWRNb2RlbCAoZGF0YSwgc3Vic2V0TmFtZSwgd2lkdGgsIGhlaWdodCwgcGVyaW9kaWMpIHtcbiAgY29uc3QgdGlsZXNpemUgPSBkYXRhLnRpbGVzaXplIHx8IDE2O1xuXG4gIHRoaXMuRk1YID0gd2lkdGg7XG4gIHRoaXMuRk1ZID0gaGVpZ2h0O1xuICB0aGlzLkZNWHhGTVkgPSB3aWR0aCAqIGhlaWdodDtcblxuICB0aGlzLnBlcmlvZGljID0gcGVyaW9kaWM7XG4gIHRoaXMudGlsZXNpemUgPSB0aWxlc2l6ZTtcblxuICBjb25zdCB1bmlxdWUgPSAhIWRhdGEudW5pcXVlO1xuICBsZXQgc3Vic2V0ID0gbnVsbDtcblxuICBpZiAoc3Vic2V0TmFtZSAmJiBkYXRhLnN1YnNldHMgJiYgISFkYXRhLnN1YnNldHNbc3Vic2V0TmFtZV0pIHtcbiAgICBzdWJzZXQgPSBkYXRhLnN1YnNldHNbc3Vic2V0TmFtZV07XG4gIH1cblxuICBjb25zdCB0aWxlID0gZnVuY3Rpb24gdGlsZSAoZikge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheSh0aWxlc2l6ZSAqIHRpbGVzaXplKTtcblxuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgdGlsZXNpemU7IHkrKykge1xuICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCB0aWxlc2l6ZTsgeCsrKSB7XG4gICAgICAgIHJlc3VsdFt4ICsgeSAqIHRpbGVzaXplXSA9IGYoeCwgeSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBjb25zdCByb3RhdGUgPSBmdW5jdGlvbiByb3RhdGUgKGFycmF5KSB7XG4gICAgcmV0dXJuIHRpbGUoZnVuY3Rpb24gKHgsIHkpIHtcbiAgICAgIHJldHVybiBhcnJheVt0aWxlc2l6ZSAtIDEgLSB5ICsgeCAqIHRpbGVzaXplXTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCByZWZsZWN0ID0gZnVuY3Rpb24gcmVmbGVjdChhcnJheSkge1xuICAgIHJldHVybiB0aWxlKGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICByZXR1cm4gYXJyYXlbdGlsZXNpemUgLSAxIC0geCArIHkgKiB0aWxlc2l6ZV07XG4gICAgfSk7XG4gIH07XG5cbiAgdGhpcy50aWxlcyA9IFtdO1xuICBjb25zdCB0ZW1wU3RhdGlvbmFyeSA9IFtdO1xuXG4gIGNvbnN0IGFjdGlvbiA9IFtdO1xuICBjb25zdCBmaXJzdE9jY3VycmVuY2UgPSB7fTtcblxuICBsZXQgZnVuY0E7XG4gIGxldCBmdW5jQjtcbiAgbGV0IGNhcmRpbmFsaXR5O1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS50aWxlcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGN1cnJlbnRUaWxlID0gZGF0YS50aWxlc1tpXTtcblxuICAgIGlmIChzdWJzZXQgIT09IG51bGwgJiYgc3Vic2V0LmluZGV4T2YoY3VycmVudFRpbGUubmFtZSkgPT09IC0xKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKGN1cnJlbnRUaWxlLnN5bW1ldHJ5KSB7XG4gICAgICBjYXNlICdMJzpcbiAgICAgICAgY2FyZGluYWxpdHkgPSA0O1xuICAgICAgICBmdW5jQSA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIChpICsgMSkgJSA0O1xuICAgICAgICB9O1xuICAgICAgICBmdW5jQiA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIGkgJSAyID09PSAwID8gaSArIDEgOiBpIC0gMTtcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdUJzpcbiAgICAgICAgY2FyZGluYWxpdHkgPSA0O1xuICAgICAgICBmdW5jQSA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIChpICsgMSkgJSA0O1xuICAgICAgICB9O1xuICAgICAgICBmdW5jQiA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIGkgJSAyID09PSAwID8gaSA6IDQgLSBpO1xuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0knOlxuICAgICAgICBjYXJkaW5hbGl0eSA9IDI7XG4gICAgICAgIGZ1bmNBID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gMSAtIGk7XG4gICAgICAgIH07XG4gICAgICAgIGZ1bmNCID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdcXFxcJzpcbiAgICAgICAgY2FyZGluYWxpdHkgPSAyO1xuICAgICAgICBmdW5jQSA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIDEgLSBpO1xuICAgICAgICB9O1xuICAgICAgICBmdW5jQiA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIDEgLSBpO1xuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0YnOlxuICAgICAgICBjYXJkaW5hbGl0eSA9IDg7XG4gICAgICAgIGZ1bmNBID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaSA8IDQgPyAoaSArIDEpICUgNCA6IDQgKyAoaSAtIDEpICUgNDtcbiAgICAgICAgfTtcbiAgICAgICAgZnVuY0IgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgIHJldHVybiBpIDwgNCA/IGkgKyA0IDogaSAtIDQ7XG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY2FyZGluYWxpdHkgPSAxO1xuICAgICAgICBmdW5jQSA9IGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgIH07XG4gICAgICAgIGZ1bmNCID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5UID0gYWN0aW9uLmxlbmd0aDtcbiAgICBmaXJzdE9jY3VycmVuY2VbY3VycmVudFRpbGUubmFtZV0gPSB0aGlzLlQ7XG5cbiAgICBmb3IgKGxldCB0ID0gMDsgdCA8IGNhcmRpbmFsaXR5OyB0KyspIHtcbiAgICAgIGFjdGlvbi5wdXNoKFtcbiAgICAgICAgdGhpcy5UICsgdCxcbiAgICAgICAgdGhpcy5UICsgZnVuY0EodCksXG4gICAgICAgIHRoaXMuVCArIGZ1bmNBKGZ1bmNBKHQpKSxcbiAgICAgICAgdGhpcy5UICsgZnVuY0EoZnVuY0EoZnVuY0EodCkpKSxcbiAgICAgICAgdGhpcy5UICsgZnVuY0IodCksXG4gICAgICAgIHRoaXMuVCArIGZ1bmNCKGZ1bmNBKHQpKSxcbiAgICAgICAgdGhpcy5UICsgZnVuY0IoZnVuY0EoZnVuY0EodCkpKSxcbiAgICAgICAgdGhpcy5UICsgZnVuY0IoZnVuY0EoZnVuY0EoZnVuY0EodCkpKSlcbiAgICAgIF0pO1xuICAgIH1cblxuXG4gICAgbGV0IGJpdG1hcDtcblxuICAgIGlmICh1bmlxdWUpIHtcbiAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgY2FyZGluYWxpdHk7IHQrKykge1xuICAgICAgICBiaXRtYXAgPSBjdXJyZW50VGlsZS5iaXRtYXBbdF07XG4gICAgICAgIHRoaXMudGlsZXMucHVzaCh0aWxlKGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIGJpdG1hcFsodGlsZXNpemUgKiB5ICsgeCkgKiA0XSxcbiAgICAgICAgICAgIGJpdG1hcFsodGlsZXNpemUgKiB5ICsgeCkgKiA0ICsgMV0sXG4gICAgICAgICAgICBiaXRtYXBbKHRpbGVzaXplICogeSArIHgpICogNCArIDJdLFxuICAgICAgICAgICAgYml0bWFwWyh0aWxlc2l6ZSAqIHkgKyB4KSAqIDQgKyAzXVxuICAgICAgICAgIF07XG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYml0bWFwID0gY3VycmVudFRpbGUuYml0bWFwO1xuICAgICAgdGhpcy50aWxlcy5wdXNoKHRpbGUoZnVuY3Rpb24gKHgsIHkpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICBiaXRtYXBbKHRpbGVzaXplICogeSArIHgpICogNF0sXG4gICAgICAgICAgYml0bWFwWyh0aWxlc2l6ZSAqIHkgKyB4KSAqIDQgKyAxXSxcbiAgICAgICAgICBiaXRtYXBbKHRpbGVzaXplICogeSArIHgpICogNCArIDJdLFxuICAgICAgICAgIGJpdG1hcFsodGlsZXNpemUgKiB5ICsgeCkgKiA0ICsgM11cbiAgICAgICAgXTtcbiAgICAgIH0pKTtcblxuICAgICAgZm9yIChsZXQgdCA9IDE7IHQgPCBjYXJkaW5hbGl0eTsgdCsrKSB7XG4gICAgICAgIHRoaXMudGlsZXMucHVzaCh0IDwgNCA/IHJvdGF0ZSh0aGlzLnRpbGVzW3RoaXMuVCArIHQgLSAxXSkgOiByZWZsZWN0KHRoaXMudGlsZXNbdGhpcy5UICsgdCAtIDRdKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChsZXQgdCA9IDA7IHQgPCBjYXJkaW5hbGl0eTsgdCsrKSB7XG4gICAgICB0ZW1wU3RhdGlvbmFyeS5wdXNoKGN1cnJlbnRUaWxlLndlaWdodCB8fCAxKTtcbiAgICB9XG5cbiAgfVxuXG4gIHRoaXMuVCA9IGFjdGlvbi5sZW5ndGg7XG4gIHRoaXMud2VpZ2h0cyA9IHRlbXBTdGF0aW9uYXJ5O1xuXG4gIHRoaXMucHJvcGFnYXRvciA9IG5ldyBBcnJheSg0KTtcbiAgY29uc3QgdGVtcFByb3BhZ2F0b3IgPSBuZXcgQXJyYXkoNCk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICB0aGlzLnByb3BhZ2F0b3JbaV0gPSBuZXcgQXJyYXkodGhpcy5UKTtcbiAgICB0ZW1wUHJvcGFnYXRvcltpXSA9IG5ldyBBcnJheSh0aGlzLlQpO1xuICAgIGZvciAobGV0IHQgPSAwOyB0IDwgdGhpcy5UOyB0KyspIHtcbiAgICAgIHRlbXBQcm9wYWdhdG9yW2ldW3RdID0gbmV3IEFycmF5KHRoaXMuVCk7XG4gICAgICBmb3IgKGxldCB0MiA9IDA7IHQyIDwgdGhpcy5UOyB0MisrKSB7XG4gICAgICAgIHRlbXBQcm9wYWdhdG9yW2ldW3RdW3QyXSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5uZWlnaGJvcnMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuZWlnaGJvciA9IGRhdGEubmVpZ2hib3JzW2ldO1xuXG4gICAgY29uc3QgbGVmdCA9IG5laWdoYm9yLmxlZnQuc3BsaXQoJyAnKS5maWx0ZXIoZnVuY3Rpb24gKHYpIHtcbiAgICAgIHJldHVybiB2Lmxlbmd0aDtcbiAgICB9KTtcbiAgICBjb25zdCByaWdodCA9IG5laWdoYm9yLnJpZ2h0LnNwbGl0KCcgJykuZmlsdGVyKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gdi5sZW5ndGg7XG4gICAgfSk7XG5cbiAgICBpZiAoc3Vic2V0ICE9PSBudWxsICYmIChzdWJzZXQuaW5kZXhPZihsZWZ0WzBdKSA9PT0gLTEgfHwgc3Vic2V0LmluZGV4T2YocmlnaHRbMF0pID09PSAtMSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNvbnN0IEwgPSBhY3Rpb25bZmlyc3RPY2N1cnJlbmNlW2xlZnRbMF1dXVtsZWZ0Lmxlbmd0aCA9PSAxID8gMCA6IHBhcnNlSW50KGxlZnRbMV0sIDEwKV07XG4gICAgY29uc3QgRCA9IGFjdGlvbltMXVsxXTtcbiAgICBjb25zdCBSID0gYWN0aW9uW2ZpcnN0T2NjdXJyZW5jZVtyaWdodFswXV1dW3JpZ2h0Lmxlbmd0aCA9PSAxID8gMCA6IHBhcnNlSW50KHJpZ2h0WzFdLCAxMCldO1xuICAgIGNvbnN0IFUgPSBhY3Rpb25bUl1bMV07XG5cbiAgICB0ZW1wUHJvcGFnYXRvclswXVtSXVtMXSA9IHRydWU7XG4gICAgdGVtcFByb3BhZ2F0b3JbMF1bYWN0aW9uW1JdWzZdXVthY3Rpb25bTF1bNl1dID0gdHJ1ZTtcbiAgICB0ZW1wUHJvcGFnYXRvclswXVthY3Rpb25bTF1bNF1dW2FjdGlvbltSXVs0XV0gPSB0cnVlO1xuICAgIHRlbXBQcm9wYWdhdG9yWzBdW2FjdGlvbltMXVsyXV1bYWN0aW9uW1JdWzJdXSA9IHRydWU7XG5cbiAgICB0ZW1wUHJvcGFnYXRvclsxXVtVXVtEXSA9IHRydWU7XG4gICAgdGVtcFByb3BhZ2F0b3JbMV1bYWN0aW9uW0RdWzZdXVthY3Rpb25bVV1bNl1dID0gdHJ1ZTtcbiAgICB0ZW1wUHJvcGFnYXRvclsxXVthY3Rpb25bVV1bNF1dW2FjdGlvbltEXVs0XV0gPSB0cnVlO1xuICAgIHRlbXBQcm9wYWdhdG9yWzFdW2FjdGlvbltEXVsyXV1bYWN0aW9uW1VdWzJdXSA9IHRydWU7XG4gIH1cblxuICBmb3IgKGxldCB0ID0gMDsgdCA8IHRoaXMuVDsgdCsrKSB7XG4gICAgZm9yIChsZXQgdDIgPSAwOyB0MiA8IHRoaXMuVDsgdDIrKykge1xuICAgICAgdGVtcFByb3BhZ2F0b3JbMl1bdF1bdDJdID0gdGVtcFByb3BhZ2F0b3JbMF1bdDJdW3RdO1xuICAgICAgdGVtcFByb3BhZ2F0b3JbM11bdF1bdDJdID0gdGVtcFByb3BhZ2F0b3JbMV1bdDJdW3RdO1xuICAgIH1cbiAgfVxuXG4gIGZvciAobGV0IGQgPSAwOyBkIDwgNDsgZCsrKSB7XG4gICAgZm9yIChsZXQgdDEgPSAwOyB0MSA8IHRoaXMuVDsgdDErKykge1xuICAgICAgY29uc3Qgc3AgPSBbXTtcbiAgICAgIGNvbnN0IHRwID0gdGVtcFByb3BhZ2F0b3JbZF1bdDFdO1xuXG4gICAgICBmb3IgKGxldCB0MiA9IDA7IHQyIDwgdGhpcy5UOyB0MisrKSB7XG4gICAgICAgIGlmICh0cFt0Ml0pIHtcbiAgICAgICAgICBzcC5wdXNoKHQyKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnByb3BhZ2F0b3JbZF1bdDFdID0gc3A7XG4gICAgfVxuICB9XG59O1xuXG5TaW1wbGVUaWxlZE1vZGVsLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoTW9kZWwucHJvdG90eXBlKTtcblNpbXBsZVRpbGVkTW9kZWwucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2ltcGxlVGlsZWRNb2RlbDtcblxuLyoqXG4gKlxuICogQHBhcmFtIHtpbnR9IHhcbiAqIEBwYXJhbSB7aW50fSB5XG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKlxuICogQHByb3RlY3RlZFxuICovXG5TaW1wbGVUaWxlZE1vZGVsLnByb3RvdHlwZS5vbkJvdW5kYXJ5ID0gZnVuY3Rpb24gKHgsIHkpIHtcbiAgcmV0dXJuICF0aGlzLnBlcmlvZGljICYmICh4IDwgMCB8fCB5IDwgMCB8fCB4ID49IHRoaXMuRk1YIHx8IHkgPj0gdGhpcy5GTVkpO1xufTtcblxuLyoqXG4gKiBSZXRyaWV2ZSB0aGUgUkdCQSBkYXRhXG4gKlxuICogQHBhcmFtIHtBcnJheXxVaW50OEFycmF5fFVpbnQ4Q2xhbXBlZEFycmF5fSBbYXJyYXldIEFycmF5IHRvIHdyaXRlIHRoZSBSR0JBIGRhdGEgaW50byAobXVzdCBhbHJlYWR5IGJlIHNldCB0byB0aGUgY29ycmVjdCBzaXplKSwgaWYgbm90IHNldCBhIG5ldyBVaW50OEFycmF5IHdpbGwgYmUgY3JlYXRlZCBhbmQgcmV0dXJuZWRcbiAqIEBwYXJhbSB7QXJyYXl8VWludDhBcnJheXxVaW50OENsYW1wZWRBcnJheX0gW2RlZmF1bHRDb2xvcl0gUkdCQSBkYXRhIG9mIHRoZSBkZWZhdWx0IGNvbG9yIHRvIHVzZSBvbiB1bnRvdWNoZWQgdGlsZXNcbiAqXG4gKiBAcmV0dXJucyB7QXJyYXl8VWludDhBcnJheXxVaW50OENsYW1wZWRBcnJheX0gUkdCQSBkYXRhXG4gKlxuICogQHB1YmxpY1xuICovXG5TaW1wbGVUaWxlZE1vZGVsLnByb3RvdHlwZS5ncmFwaGljcyA9IGZ1bmN0aW9uIChhcnJheSwgZGVmYXVsdENvbG9yKSB7XG4gIGFycmF5ID0gYXJyYXkgfHwgbmV3IFVpbnQ4QXJyYXkodGhpcy5GTVh4Rk1ZICogdGhpcy50aWxlc2l6ZSAqIHRoaXMudGlsZXNpemUgKiA0KTtcblxuICBpZiAodGhpcy5pc0dlbmVyYXRpb25Db21wbGV0ZSgpKSB7XG4gICAgdGhpcy5ncmFwaGljc0NvbXBsZXRlKGFycmF5KTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmdyYXBoaWNzSW5jb21wbGV0ZShhcnJheSwgZGVmYXVsdENvbG9yKTtcbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn07XG5cbi8qKlxuICogU2V0IHRoZSBSR0JBIGRhdGEgZm9yIGEgY29tcGxldGUgZ2VuZXJhdGlvbiBpbiBhIGdpdmVuIGFycmF5XG4gKlxuICogQHBhcmFtIHtBcnJheXxVaW50OEFycmF5fFVpbnQ4Q2xhbXBlZEFycmF5fSBbYXJyYXldIEFycmF5IHRvIHdyaXRlIHRoZSBSR0JBIGRhdGEgaW50bywgaWYgbm90IHNldCBhIG5ldyBVaW50OEFycmF5IHdpbGwgYmUgY3JlYXRlZCBhbmQgcmV0dXJuZWRcbiAqXG4gKiBAcHJvdGVjdGVkXG4gKi9cblNpbXBsZVRpbGVkTW9kZWwucHJvdG90eXBlLmdyYXBoaWNzQ29tcGxldGUgPSBmdW5jdGlvbiAoYXJyYXkpIHtcbiAgZm9yIChsZXQgeCA9IDA7IHggPCB0aGlzLkZNWDsgeCsrKSB7XG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLkZNWTsgeSsrKSB7XG4gICAgICBjb25zdCB0aWxlID0gdGhpcy50aWxlc1t0aGlzLm9ic2VydmVkW3ggKyB5ICogdGhpcy5GTVhdXTtcblxuICAgICAgZm9yIChsZXQgeXQgPSAwOyB5dCA8IHRoaXMudGlsZXNpemU7IHl0KyspIHtcbiAgICAgICAgZm9yIChsZXQgeHQgPSAwOyB4dCA8IHRoaXMudGlsZXNpemU7IHh0KyspIHtcbiAgICAgICAgICBjb25zdCBwaXhlbEluZGV4ID0gKHggKiB0aGlzLnRpbGVzaXplICsgeHQgKyAoeSAqIHRoaXMudGlsZXNpemUgKyB5dCkgKiB0aGlzLkZNWCAqIHRoaXMudGlsZXNpemUpICogNDtcbiAgICAgICAgICBjb25zdCBjb2xvciA9IHRpbGVbeHQgKyB5dCAqIHRoaXMudGlsZXNpemVdO1xuXG4gICAgICAgICAgYXJyYXlbcGl4ZWxJbmRleF0gPSBjb2xvclswXTtcbiAgICAgICAgICBhcnJheVtwaXhlbEluZGV4ICsgMV0gPSBjb2xvclsxXTtcbiAgICAgICAgICBhcnJheVtwaXhlbEluZGV4ICsgMl0gPSBjb2xvclsyXTtcbiAgICAgICAgICBhcnJheVtwaXhlbEluZGV4ICsgM10gPSBjb2xvclszXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBTZXQgdGhlIFJHQkEgZGF0YSBmb3IgYW4gaW5jb21wbGV0ZSBnZW5lcmF0aW9uIGluIGEgZ2l2ZW4gYXJyYXlcbiAqXG4gKiBAcGFyYW0ge0FycmF5fFVpbnQ4QXJyYXl8VWludDhDbGFtcGVkQXJyYXl9IFthcnJheV0gQXJyYXkgdG8gd3JpdGUgdGhlIFJHQkEgZGF0YSBpbnRvLCBpZiBub3Qgc2V0IGEgbmV3IFVpbnQ4QXJyYXkgd2lsbCBiZSBjcmVhdGVkIGFuZCByZXR1cm5lZFxuICogQHBhcmFtIHtBcnJheXxVaW50OEFycmF5fFVpbnQ4Q2xhbXBlZEFycmF5fSBbZGVmYXVsdENvbG9yXSBSR0JBIGRhdGEgb2YgdGhlIGRlZmF1bHQgY29sb3IgdG8gdXNlIG9uIHVudG91Y2hlZCB0aWxlc1xuICpcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuU2ltcGxlVGlsZWRNb2RlbC5wcm90b3R5cGUuZ3JhcGhpY3NJbmNvbXBsZXRlID0gZnVuY3Rpb24gKGFycmF5LCBkZWZhdWx0Q29sb3IpIHtcbiAgaWYgKCFkZWZhdWx0Q29sb3IgfHwgZGVmYXVsdENvbG9yLmxlbmd0aCAhPT0gNCkge1xuICAgIGRlZmF1bHRDb2xvciA9IGZhbHNlO1xuICB9XG5cbiAgZm9yIChsZXQgeCA9IDA7IHggPCB0aGlzLkZNWDsgeCsrKSB7XG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLkZNWTsgeSsrKSB7XG4gICAgICBjb25zdCB3ID0gdGhpcy53YXZlW3ggKyB5ICogdGhpcy5GTVhdO1xuICAgICAgbGV0IGFtb3VudCA9IDA7XG4gICAgICBsZXQgc3VtV2VpZ2h0cyA9IDA7XG5cbiAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgdGhpcy5UOyB0KyspIHtcbiAgICAgICAgaWYgKHdbdF0pIHtcbiAgICAgICAgICBhbW91bnQrKztcbiAgICAgICAgICBzdW1XZWlnaHRzICs9IHRoaXMud2VpZ2h0c1t0XTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCBsYW1iZGEgPSAxIC8gc3VtV2VpZ2h0cztcblxuICAgICAgZm9yIChsZXQgeXQgPSAwOyB5dCA8IHRoaXMudGlsZXNpemU7IHl0KyspIHtcbiAgICAgICAgZm9yIChsZXQgeHQgPSAwOyB4dCA8IHRoaXMudGlsZXNpemU7IHh0KyspIHtcbiAgICAgICAgICBjb25zdCBwaXhlbEluZGV4ID0gKHggKiB0aGlzLnRpbGVzaXplICsgeHQgKyAoeSAqIHRoaXMudGlsZXNpemUgKyB5dCkgKiB0aGlzLkZNWCAqIHRoaXMudGlsZXNpemUpICogNDtcblxuICAgICAgICAgIGlmIChkZWZhdWx0Q29sb3IgJiYgYW1vdW50ID09PSB0aGlzLlQpIHtcbiAgICAgICAgICAgIGFycmF5W3BpeGVsSW5kZXhdID0gZGVmYXVsdENvbG9yWzBdO1xuICAgICAgICAgICAgYXJyYXlbcGl4ZWxJbmRleCArIDFdID0gZGVmYXVsdENvbG9yWzFdO1xuICAgICAgICAgICAgYXJyYXlbcGl4ZWxJbmRleCArIDJdID0gZGVmYXVsdENvbG9yWzJdO1xuICAgICAgICAgICAgYXJyYXlbcGl4ZWxJbmRleCArIDNdID0gZGVmYXVsdENvbG9yWzNdO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgciA9IDA7XG4gICAgICAgICAgICBsZXQgZyA9IDA7XG4gICAgICAgICAgICBsZXQgYiA9IDA7XG4gICAgICAgICAgICBsZXQgYSA9IDA7XG5cbiAgICAgICAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgdGhpcy5UOyB0KyspIHtcbiAgICAgICAgICAgICAgaWYgKHdbdF0pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjID0gdGhpcy50aWxlc1t0XVt4dCArIHl0ICogdGhpcy50aWxlc2l6ZV07XG4gICAgICAgICAgICAgICAgY29uc3Qgd2VpZ2h0ID0gdGhpcy53ZWlnaHRzW3RdICogbGFtYmRhO1xuICAgICAgICAgICAgICAgIHIrPSBjWzBdICogd2VpZ2h0O1xuICAgICAgICAgICAgICAgIGcrPSBjWzFdICogd2VpZ2h0O1xuICAgICAgICAgICAgICAgIGIrPSBjWzJdICogd2VpZ2h0O1xuICAgICAgICAgICAgICAgIGErPSBjWzNdICogd2VpZ2h0O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFycmF5W3BpeGVsSW5kZXhdID0gcjtcbiAgICAgICAgICAgIGFycmF5W3BpeGVsSW5kZXggKyAxXSA9IGc7XG4gICAgICAgICAgICBhcnJheVtwaXhlbEluZGV4ICsgMl0gPSBiO1xuICAgICAgICAgICAgYXJyYXlbcGl4ZWxJbmRleCArIDNdID0gYTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2ltcGxlVGlsZWRNb2RlbDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wavefunctioncollapse/simple-tiled-model.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;